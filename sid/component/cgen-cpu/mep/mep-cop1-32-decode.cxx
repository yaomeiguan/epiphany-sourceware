/* Simulator instruction decoder for mepcop1_32.

THIS FILE IS MACHINE GENERATED WITH CGEN.

Copyright (C) 2000-2009 Red Hat, Inc.

This file is part of the Red Hat simulators.


*/


#if HAVE_CONFIG_H
#include "config.h"
#endif
#include "mep_ext1.h"

using namespace mep_ext1; // FIXME: namespace organization still wip


// The instruction descriptor array. 

mepcop1_32_idesc mepcop1_32_idesc::idesc_table[MEPCOP1_32_INSN_CPSMSBSLLA1_W_C3 + 1] =
{
  { mepcop1_32_sem_x_invalid, "X_INVALID", MEPCOP1_32_INSN_X_INVALID, { 0|(1<<CGEN_INSN_VIRTUAL), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_CORE) } },
  { mepcop1_32_sem_cmov_crn_rm, "CMOV_CRN_RM", MEPCOP1_32_INSN_CMOV_CRN_RM, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cmov_rn_crm, "CMOV_RN_CRM", MEPCOP1_32_INSN_CMOV_RN_CRM, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cmovc_ccrn_rm, "CMOVC_CCRN_RM", MEPCOP1_32_INSN_CMOVC_CCRN_RM, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cmovc_rn_ccrm, "CMOVC_RN_CCRM", MEPCOP1_32_INSN_CMOVC_RN_CCRM, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cmovh_crn_rm, "CMOVH_CRN_RM", MEPCOP1_32_INSN_CMOVH_CRN_RM, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cmovh_rn_crm, "CMOVH_RN_CRM", MEPCOP1_32_INSN_CMOVH_RN_CRM, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpadd3_b_C3, "CPADD3_B_C3", MEPCOP1_32_INSN_CPADD3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpadd3_h_C3, "CPADD3_H_C3", MEPCOP1_32_INSN_CPADD3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpadd3_w_C3, "CPADD3_W_C3", MEPCOP1_32_INSN_CPADD3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdadd3_C3, "CDADD3_C3", MEPCOP1_32_INSN_CDADD3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsub3_b_C3, "CPSUB3_B_C3", MEPCOP1_32_INSN_CPSUB3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsub3_h_C3, "CPSUB3_H_C3", MEPCOP1_32_INSN_CPSUB3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsub3_w_C3, "CPSUB3_W_C3", MEPCOP1_32_INSN_CPSUB3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdsub3_C3, "CDSUB3_C3", MEPCOP1_32_INSN_CDSUB3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpand3_C3, "CPAND3_C3", MEPCOP1_32_INSN_CPAND3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_VECT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpor3_C3, "CPOR3_C3", MEPCOP1_32_INSN_CPOR3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_VECT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpnor3_C3, "CPNOR3_C3", MEPCOP1_32_INSN_CPNOR3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_VECT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpxor3_C3, "CPXOR3_C3", MEPCOP1_32_INSN_CPXOR3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_VECT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsel_C3, "CPSEL_C3", MEPCOP1_32_INSN_CPSEL_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpfsftbi_C3, "CPFSFTBI_C3", MEPCOP1_32_INSN_CPFSFTBI_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpfsftbs0_C3, "CPFSFTBS0_C3", MEPCOP1_32_INSN_CPFSFTBS0_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpfsftbs1_C3, "CPFSFTBS1_C3", MEPCOP1_32_INSN_CPFSFTBS1_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpunpacku_b_C3, "CPUNPACKU_B_C3", MEPCOP1_32_INSN_CPUNPACKU_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpunpacku_h_C3, "CPUNPACKU_H_C3", MEPCOP1_32_INSN_CPUNPACKU_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4UHI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpunpacku_w_C3, "CPUNPACKU_W_C3", MEPCOP1_32_INSN_CPUNPACKU_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpunpackl_b_C3, "CPUNPACKL_B_C3", MEPCOP1_32_INSN_CPUNPACKL_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpunpackl_h_C3, "CPUNPACKL_H_C3", MEPCOP1_32_INSN_CPUNPACKL_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpunpackl_w_C3, "CPUNPACKL_W_C3", MEPCOP1_32_INSN_CPUNPACKL_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cppacku_b_C3, "CPPACKU_B_C3", MEPCOP1_32_INSN_CPPACKU_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cppack_b_C3, "CPPACK_B_C3", MEPCOP1_32_INSN_CPPACK_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cppack_h_C3, "CPPACK_H_C3", MEPCOP1_32_INSN_CPPACK_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsrl3_b_C3, "CPSRL3_B_C3", MEPCOP1_32_INSN_CPSRL3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssrl3_b_C3, "CPSSRL3_B_C3", MEPCOP1_32_INSN_CPSSRL3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsrl3_h_C3, "CPSRL3_H_C3", MEPCOP1_32_INSN_CPSRL3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssrl3_h_C3, "CPSSRL3_H_C3", MEPCOP1_32_INSN_CPSSRL3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsrl3_w_C3, "CPSRL3_W_C3", MEPCOP1_32_INSN_CPSRL3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssrl3_w_C3, "CPSSRL3_W_C3", MEPCOP1_32_INSN_CPSSRL3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdsrl3_C3, "CDSRL3_C3", MEPCOP1_32_INSN_CDSRL3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsra3_b_C3, "CPSRA3_B_C3", MEPCOP1_32_INSN_CPSRA3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssra3_b_C3, "CPSSRA3_B_C3", MEPCOP1_32_INSN_CPSSRA3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsra3_h_C3, "CPSRA3_H_C3", MEPCOP1_32_INSN_CPSRA3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssra3_h_C3, "CPSSRA3_H_C3", MEPCOP1_32_INSN_CPSSRA3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsra3_w_C3, "CPSRA3_W_C3", MEPCOP1_32_INSN_CPSRA3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssra3_w_C3, "CPSSRA3_W_C3", MEPCOP1_32_INSN_CPSSRA3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdsra3_C3, "CDSRA3_C3", MEPCOP1_32_INSN_CDSRA3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsll3_b_C3, "CPSLL3_B_C3", MEPCOP1_32_INSN_CPSLL3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssll3_b_C3, "CPSSLL3_B_C3", MEPCOP1_32_INSN_CPSSLL3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsll3_h_C3, "CPSLL3_H_C3", MEPCOP1_32_INSN_CPSLL3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssll3_h_C3, "CPSSLL3_H_C3", MEPCOP1_32_INSN_CPSSLL3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsll3_w_C3, "CPSLL3_W_C3", MEPCOP1_32_INSN_CPSLL3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssll3_w_C3, "CPSSLL3_W_C3", MEPCOP1_32_INSN_CPSSLL3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdsll3_C3, "CDSLL3_C3", MEPCOP1_32_INSN_CDSLL3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsla3_h_C3, "CPSLA3_H_C3", MEPCOP1_32_INSN_CPSLA3_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsla3_w_C3, "CPSLA3_W_C3", MEPCOP1_32_INSN_CPSLA3_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsadd3_h_C3, "CPSADD3_H_C3", MEPCOP1_32_INSN_CPSADD3_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsadd3_w_C3, "CPSADD3_W_C3", MEPCOP1_32_INSN_CPSADD3_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssub3_h_C3, "CPSSUB3_H_C3", MEPCOP1_32_INSN_CPSSUB3_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssub3_w_C3, "CPSSUB3_W_C3", MEPCOP1_32_INSN_CPSSUB3_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextuaddu3_b_C3, "CPEXTUADDU3_B_C3", MEPCOP1_32_INSN_CPEXTUADDU3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextuadd3_b_C3, "CPEXTUADD3_B_C3", MEPCOP1_32_INSN_CPEXTUADD3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextladdu3_b_C3, "CPEXTLADDU3_B_C3", MEPCOP1_32_INSN_CPEXTLADDU3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextladd3_b_C3, "CPEXTLADD3_B_C3", MEPCOP1_32_INSN_CPEXTLADD3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextusubu3_b_C3, "CPEXTUSUBU3_B_C3", MEPCOP1_32_INSN_CPEXTUSUBU3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextusub3_b_C3, "CPEXTUSUB3_B_C3", MEPCOP1_32_INSN_CPEXTUSUB3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextlsubu3_b_C3, "CPEXTLSUBU3_B_C3", MEPCOP1_32_INSN_CPEXTLSUBU3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextlsub3_b_C3, "CPEXTLSUB3_B_C3", MEPCOP1_32_INSN_CPEXTLSUB3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpaveu3_b_C3, "CPAVEU3_B_C3", MEPCOP1_32_INSN_CPAVEU3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpave3_b_C3, "CPAVE3_B_C3", MEPCOP1_32_INSN_CPAVE3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpave3_h_C3, "CPAVE3_H_C3", MEPCOP1_32_INSN_CPAVE3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpave3_w_C3, "CPAVE3_W_C3", MEPCOP1_32_INSN_CPAVE3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpaddsru3_b_C3, "CPADDSRU3_B_C3", MEPCOP1_32_INSN_CPADDSRU3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpaddsr3_b_C3, "CPADDSR3_B_C3", MEPCOP1_32_INSN_CPADDSR3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpaddsr3_h_C3, "CPADDSR3_H_C3", MEPCOP1_32_INSN_CPADDSR3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpaddsr3_w_C3, "CPADDSR3_W_C3", MEPCOP1_32_INSN_CPADDSR3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpabsu3_b_C3, "CPABSU3_B_C3", MEPCOP1_32_INSN_CPABSU3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpabs3_b_C3, "CPABS3_B_C3", MEPCOP1_32_INSN_CPABS3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpabs3_h_C3, "CPABS3_H_C3", MEPCOP1_32_INSN_CPABS3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmaxu3_b_C3, "CPMAXU3_B_C3", MEPCOP1_32_INSN_CPMAXU3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmax3_b_C3, "CPMAX3_B_C3", MEPCOP1_32_INSN_CPMAX3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmax3_h_C3, "CPMAX3_H_C3", MEPCOP1_32_INSN_CPMAX3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmaxu3_w_C3, "CPMAXU3_W_C3", MEPCOP1_32_INSN_CPMAXU3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmax3_w_C3, "CPMAX3_W_C3", MEPCOP1_32_INSN_CPMAX3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpminu3_b_C3, "CPMINU3_B_C3", MEPCOP1_32_INSN_CPMINU3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmin3_b_C3, "CPMIN3_B_C3", MEPCOP1_32_INSN_CPMIN3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmin3_h_C3, "CPMIN3_H_C3", MEPCOP1_32_INSN_CPMIN3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpminu3_w_C3, "CPMINU3_W_C3", MEPCOP1_32_INSN_CPMINU3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmin3_w_C3, "CPMIN3_W_C3", MEPCOP1_32_INSN_CPMIN3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovfrcsar0_C3, "CPMOVFRCSAR0_C3", MEPCOP1_32_INSN_CPMOVFRCSAR0_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovfrcsar1_C3, "CPMOVFRCSAR1_C3", MEPCOP1_32_INSN_CPMOVFRCSAR1_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovfrcc_C3, "CPMOVFRCC_C3", MEPCOP1_32_INSN_CPMOVFRCC_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovtocsar0_C3, "CPMOVTOCSAR0_C3", MEPCOP1_32_INSN_CPMOVTOCSAR0_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovtocsar1_C3, "CPMOVTOCSAR1_C3", MEPCOP1_32_INSN_CPMOVTOCSAR1_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovtocc_C3, "CPMOVTOCC_C3", MEPCOP1_32_INSN_CPMOVTOCC_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmov_C3, "CPMOV_C3", MEPCOP1_32_INSN_CPMOV_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpabsz_b_C3, "CPABSZ_B_C3", MEPCOP1_32_INSN_CPABSZ_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpabsz_h_C3, "CPABSZ_H_C3", MEPCOP1_32_INSN_CPABSZ_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpabsz_w_C3, "CPABSZ_W_C3", MEPCOP1_32_INSN_CPABSZ_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpldz_h_C3, "CPLDZ_H_C3", MEPCOP1_32_INSN_CPLDZ_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpldz_w_C3, "CPLDZ_W_C3", MEPCOP1_32_INSN_CPLDZ_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpnorm_h_C3, "CPNORM_H_C3", MEPCOP1_32_INSN_CPNORM_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpnorm_w_C3, "CPNORM_W_C3", MEPCOP1_32_INSN_CPNORM_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cphaddu_b_C3, "CPHADDU_B_C3", MEPCOP1_32_INSN_CPHADDU_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cphadd_b_C3, "CPHADD_B_C3", MEPCOP1_32_INSN_CPHADD_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cphadd_h_C3, "CPHADD_H_C3", MEPCOP1_32_INSN_CPHADD_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cphadd_w_C3, "CPHADD_W_C3", MEPCOP1_32_INSN_CPHADD_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpccadd_b_C3, "CPCCADD_B_C3", MEPCOP1_32_INSN_CPCCADD_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRSTCOPY, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpbcast_b_C3, "CPBCAST_B_C3", MEPCOP1_32_INSN_CPBCAST_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpbcast_h_C3, "CPBCAST_H_C3", MEPCOP1_32_INSN_CPBCAST_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpbcast_w_C3, "CPBCAST_W_C3", MEPCOP1_32_INSN_CPBCAST_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextuu_b_C3, "CPEXTUU_B_C3", MEPCOP1_32_INSN_CPEXTUU_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextu_b_C3, "CPEXTU_B_C3", MEPCOP1_32_INSN_CPEXTU_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextuu_h_C3, "CPEXTUU_H_C3", MEPCOP1_32_INSN_CPEXTUU_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4UHI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextu_h_C3, "CPEXTU_H_C3", MEPCOP1_32_INSN_CPEXTU_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4UHI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextlu_b_C3, "CPEXTLU_B_C3", MEPCOP1_32_INSN_CPEXTLU_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextl_b_C3, "CPEXTL_B_C3", MEPCOP1_32_INSN_CPEXTL_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextlu_h_C3, "CPEXTLU_H_C3", MEPCOP1_32_INSN_CPEXTLU_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4UHI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpextl_h_C3, "CPEXTL_H_C3", MEPCOP1_32_INSN_CPEXTL_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcastub_h_C3, "CPCASTUB_H_C3", MEPCOP1_32_INSN_CPCASTUB_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcastb_h_C3, "CPCASTB_H_C3", MEPCOP1_32_INSN_CPCASTB_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcastub_w_C3, "CPCASTUB_W_C3", MEPCOP1_32_INSN_CPCASTUB_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcastb_w_C3, "CPCASTB_W_C3", MEPCOP1_32_INSN_CPCASTB_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcastuh_w_C3, "CPCASTUH_W_C3", MEPCOP1_32_INSN_CPCASTUH_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcasth_w_C3, "CPCASTH_W_C3", MEPCOP1_32_INSN_CPCASTH_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdcastuw_C3, "CDCASTUW_C3", MEPCOP1_32_INSN_CDCASTUW_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdcastw_C3, "CDCASTW_C3", MEPCOP1_32_INSN_CDCASTW_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpeqz_b_C3, "CPCMPEQZ_B_C3", MEPCOP1_32_INSN_CPCMPEQZ_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpeq_b_C3, "CPCMPEQ_B_C3", MEPCOP1_32_INSN_CPCMPEQ_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpeq_h_C3, "CPCMPEQ_H_C3", MEPCOP1_32_INSN_CPCMPEQ_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpeq_w_C3, "CPCMPEQ_W_C3", MEPCOP1_32_INSN_CPCMPEQ_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpne_b_C3, "CPCMPNE_B_C3", MEPCOP1_32_INSN_CPCMPNE_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpne_h_C3, "CPCMPNE_H_C3", MEPCOP1_32_INSN_CPCMPNE_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpne_w_C3, "CPCMPNE_W_C3", MEPCOP1_32_INSN_CPCMPNE_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpgtu_b_C3, "CPCMPGTU_B_C3", MEPCOP1_32_INSN_CPCMPGTU_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpgt_b_C3, "CPCMPGT_B_C3", MEPCOP1_32_INSN_CPCMPGT_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpgt_h_C3, "CPCMPGT_H_C3", MEPCOP1_32_INSN_CPCMPGT_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpgtu_w_C3, "CPCMPGTU_W_C3", MEPCOP1_32_INSN_CPCMPGTU_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpgt_w_C3, "CPCMPGT_W_C3", MEPCOP1_32_INSN_CPCMPGT_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpgeu_b_C3, "CPCMPGEU_B_C3", MEPCOP1_32_INSN_CPCMPGEU_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpge_b_C3, "CPCMPGE_B_C3", MEPCOP1_32_INSN_CPCMPGE_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpge_h_C3, "CPCMPGE_H_C3", MEPCOP1_32_INSN_CPCMPGE_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpgeu_w_C3, "CPCMPGEU_W_C3", MEPCOP1_32_INSN_CPCMPGEU_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpcmpge_w_C3, "CPCMPGE_W_C3", MEPCOP1_32_INSN_CPCMPGE_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpeq_b_C3, "CPACMPEQ_B_C3", MEPCOP1_32_INSN_CPACMPEQ_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpeq_h_C3, "CPACMPEQ_H_C3", MEPCOP1_32_INSN_CPACMPEQ_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpeq_w_C3, "CPACMPEQ_W_C3", MEPCOP1_32_INSN_CPACMPEQ_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpne_b_C3, "CPACMPNE_B_C3", MEPCOP1_32_INSN_CPACMPNE_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpne_h_C3, "CPACMPNE_H_C3", MEPCOP1_32_INSN_CPACMPNE_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpne_w_C3, "CPACMPNE_W_C3", MEPCOP1_32_INSN_CPACMPNE_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpgtu_b_C3, "CPACMPGTU_B_C3", MEPCOP1_32_INSN_CPACMPGTU_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpgt_b_C3, "CPACMPGT_B_C3", MEPCOP1_32_INSN_CPACMPGT_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpgt_h_C3, "CPACMPGT_H_C3", MEPCOP1_32_INSN_CPACMPGT_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpgtu_w_C3, "CPACMPGTU_W_C3", MEPCOP1_32_INSN_CPACMPGTU_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpgt_w_C3, "CPACMPGT_W_C3", MEPCOP1_32_INSN_CPACMPGT_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpgeu_b_C3, "CPACMPGEU_B_C3", MEPCOP1_32_INSN_CPACMPGEU_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpge_b_C3, "CPACMPGE_B_C3", MEPCOP1_32_INSN_CPACMPGE_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpge_h_C3, "CPACMPGE_H_C3", MEPCOP1_32_INSN_CPACMPGE_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpgeu_w_C3, "CPACMPGEU_W_C3", MEPCOP1_32_INSN_CPACMPGEU_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpacmpge_w_C3, "CPACMPGE_W_C3", MEPCOP1_32_INSN_CPACMPGE_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpeq_b_C3, "CPOCMPEQ_B_C3", MEPCOP1_32_INSN_CPOCMPEQ_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpeq_h_C3, "CPOCMPEQ_H_C3", MEPCOP1_32_INSN_CPOCMPEQ_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpeq_w_C3, "CPOCMPEQ_W_C3", MEPCOP1_32_INSN_CPOCMPEQ_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpne_b_C3, "CPOCMPNE_B_C3", MEPCOP1_32_INSN_CPOCMPNE_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpne_h_C3, "CPOCMPNE_H_C3", MEPCOP1_32_INSN_CPOCMPNE_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpne_w_C3, "CPOCMPNE_W_C3", MEPCOP1_32_INSN_CPOCMPNE_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpgtu_b_C3, "CPOCMPGTU_B_C3", MEPCOP1_32_INSN_CPOCMPGTU_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpgt_b_C3, "CPOCMPGT_B_C3", MEPCOP1_32_INSN_CPOCMPGT_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpgt_h_C3, "CPOCMPGT_H_C3", MEPCOP1_32_INSN_CPOCMPGT_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpgtu_w_C3, "CPOCMPGTU_W_C3", MEPCOP1_32_INSN_CPOCMPGTU_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpgt_w_C3, "CPOCMPGT_W_C3", MEPCOP1_32_INSN_CPOCMPGT_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpgeu_b_C3, "CPOCMPGEU_B_C3", MEPCOP1_32_INSN_CPOCMPGEU_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpge_b_C3, "CPOCMPGE_B_C3", MEPCOP1_32_INSN_CPOCMPGE_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpge_h_C3, "CPOCMPGE_H_C3", MEPCOP1_32_INSN_CPOCMPGE_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpgeu_w_C3, "CPOCMPGEU_W_C3", MEPCOP1_32_INSN_CPOCMPGEU_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpocmpge_w_C3, "CPOCMPGE_W_C3", MEPCOP1_32_INSN_CPOCMPGE_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsrli3_b_C3, "CPSRLI3_B_C3", MEPCOP1_32_INSN_CPSRLI3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsrli3_h_C3, "CPSRLI3_H_C3", MEPCOP1_32_INSN_CPSRLI3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsrli3_w_C3, "CPSRLI3_W_C3", MEPCOP1_32_INSN_CPSRLI3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdsrli3_C3, "CDSRLI3_C3", MEPCOP1_32_INSN_CDSRLI3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsrai3_b_C3, "CPSRAI3_B_C3", MEPCOP1_32_INSN_CPSRAI3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsrai3_h_C3, "CPSRAI3_H_C3", MEPCOP1_32_INSN_CPSRAI3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsrai3_w_C3, "CPSRAI3_W_C3", MEPCOP1_32_INSN_CPSRAI3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdsrai3_C3, "CDSRAI3_C3", MEPCOP1_32_INSN_CDSRAI3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpslli3_b_C3, "CPSLLI3_B_C3", MEPCOP1_32_INSN_CPSLLI3_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpslli3_h_C3, "CPSLLI3_H_C3", MEPCOP1_32_INSN_CPSLLI3_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpslli3_w_C3, "CPSLLI3_W_C3", MEPCOP1_32_INSN_CPSLLI3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdslli3_C3, "CDSLLI3_C3", MEPCOP1_32_INSN_CDSLLI3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpslai3_h_C3, "CPSLAI3_H_C3", MEPCOP1_32_INSN_CPSLAI3_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpslai3_w_C3, "CPSLAI3_W_C3", MEPCOP1_32_INSN_CPSLAI3_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpclipiu3_w_C3, "CPCLIPIU3_W_C3", MEPCOP1_32_INSN_CPCLIPIU3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpclipi3_w_C3, "CPCLIPI3_W_C3", MEPCOP1_32_INSN_CPCLIPI3_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdclipiu3_C3, "CDCLIPIU3_C3", MEPCOP1_32_INSN_CDCLIPIU3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdclipi3_C3, "CDCLIPI3_C3", MEPCOP1_32_INSN_CDCLIPI3_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovi_b_C3, "CPMOVI_B_C3", MEPCOP1_32_INSN_CPMOVI_B_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmoviu_h_C3, "CPMOVIU_H_C3", MEPCOP1_32_INSN_CPMOVIU_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4UHI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovi_h_C3, "CPMOVI_H_C3", MEPCOP1_32_INSN_CPMOVI_H_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmoviu_w_C3, "CPMOVIU_W_C3", MEPCOP1_32_INSN_CPMOVIU_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovi_w_C3, "CPMOVI_W_C3", MEPCOP1_32_INSN_CPMOVI_W_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdmoviu_C3, "CDMOVIU_C3", MEPCOP1_32_INSN_CDMOVIU_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cdmovi_C3, "CDMOVI_C3", MEPCOP1_32_INSN_CDMOVI_C3, { 0|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpadda1u_b_C3, "CPADDA1U_B_C3", MEPCOP1_32_INSN_CPADDA1U_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpadda1_b_C3, "CPADDA1_B_C3", MEPCOP1_32_INSN_CPADDA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpaddua1_h_C3, "CPADDUA1_H_C3", MEPCOP1_32_INSN_CPADDUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpaddla1_h_C3, "CPADDLA1_H_C3", MEPCOP1_32_INSN_CPADDLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpaddaca1u_b_C3, "CPADDACA1U_B_C3", MEPCOP1_32_INSN_CPADDACA1U_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpaddaca1_b_C3, "CPADDACA1_B_C3", MEPCOP1_32_INSN_CPADDACA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpaddacua1_h_C3, "CPADDACUA1_H_C3", MEPCOP1_32_INSN_CPADDACUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpaddacla1_h_C3, "CPADDACLA1_H_C3", MEPCOP1_32_INSN_CPADDACLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsuba1u_b_C3, "CPSUBA1U_B_C3", MEPCOP1_32_INSN_CPSUBA1U_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsuba1_b_C3, "CPSUBA1_B_C3", MEPCOP1_32_INSN_CPSUBA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsubua1_h_C3, "CPSUBUA1_H_C3", MEPCOP1_32_INSN_CPSUBUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsubla1_h_C3, "CPSUBLA1_H_C3", MEPCOP1_32_INSN_CPSUBLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsubaca1u_b_C3, "CPSUBACA1U_B_C3", MEPCOP1_32_INSN_CPSUBACA1U_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsubaca1_b_C3, "CPSUBACA1_B_C3", MEPCOP1_32_INSN_CPSUBACA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsubacua1_h_C3, "CPSUBACUA1_H_C3", MEPCOP1_32_INSN_CPSUBACUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsubacla1_h_C3, "CPSUBACLA1_H_C3", MEPCOP1_32_INSN_CPSUBACLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpabsa1u_b_C3, "CPABSA1U_B_C3", MEPCOP1_32_INSN_CPABSA1U_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpabsa1_b_C3, "CPABSA1_B_C3", MEPCOP1_32_INSN_CPABSA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpabsua1_h_C3, "CPABSUA1_H_C3", MEPCOP1_32_INSN_CPABSUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpabsla1_h_C3, "CPABSLA1_H_C3", MEPCOP1_32_INSN_CPABSLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsada1u_b_C3, "CPSADA1U_B_C3", MEPCOP1_32_INSN_CPSADA1U_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsada1_b_C3, "CPSADA1_B_C3", MEPCOP1_32_INSN_CPSADA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsadua1_h_C3, "CPSADUA1_H_C3", MEPCOP1_32_INSN_CPSADUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsadla1_h_C3, "CPSADLA1_H_C3", MEPCOP1_32_INSN_CPSADLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpseta1_h_C3, "CPSETA1_H_C3", MEPCOP1_32_INSN_CPSETA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsetua1_w_C3, "CPSETUA1_W_C3", MEPCOP1_32_INSN_CPSETUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsetla1_w_C3, "CPSETLA1_W_C3", MEPCOP1_32_INSN_CPSETLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmova1_b_C3, "CPMOVA1_B_C3", MEPCOP1_32_INSN_CPMOVA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovua1_h_C3, "CPMOVUA1_H_C3", MEPCOP1_32_INSN_CPMOVUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovla1_h_C3, "CPMOVLA1_H_C3", MEPCOP1_32_INSN_CPMOVLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovuua1_w_C3, "CPMOVUUA1_W_C3", MEPCOP1_32_INSN_CPMOVUUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovula1_w_C3, "CPMOVULA1_W_C3", MEPCOP1_32_INSN_CPMOVULA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovlua1_w_C3, "CPMOVLUA1_W_C3", MEPCOP1_32_INSN_CPMOVLUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovlla1_w_C3, "CPMOVLLA1_W_C3", MEPCOP1_32_INSN_CPMOVLLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cppacka1u_b_C3, "CPPACKA1U_B_C3", MEPCOP1_32_INSN_CPPACKA1U_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cppacka1_b_C3, "CPPACKA1_B_C3", MEPCOP1_32_INSN_CPPACKA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cppackua1_h_C3, "CPPACKUA1_H_C3", MEPCOP1_32_INSN_CPPACKUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cppackla1_h_C3, "CPPACKLA1_H_C3", MEPCOP1_32_INSN_CPPACKLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cppackua1_w_C3, "CPPACKUA1_W_C3", MEPCOP1_32_INSN_CPPACKUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cppackla1_w_C3, "CPPACKLA1_W_C3", MEPCOP1_32_INSN_CPPACKLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovhua1_w_C3, "CPMOVHUA1_W_C3", MEPCOP1_32_INSN_CPMOVHUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmovhla1_w_C3, "CPMOVHLA1_W_C3", MEPCOP1_32_INSN_CPMOVHLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_FIRST, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsrla1_C3, "CPSRLA1_C3", MEPCOP1_32_INSN_CPSRLA1_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsraa1_C3, "CPSRAA1_C3", MEPCOP1_32_INSN_CPSRAA1_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpslla1_C3, "CPSLLA1_C3", MEPCOP1_32_INSN_CPSLLA1_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsrlia1_P1, "CPSRLIA1_P1", MEPCOP1_32_INSN_CPSRLIA1_P1, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsraia1_P1, "CPSRAIA1_P1", MEPCOP1_32_INSN_CPSRAIA1_P1, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsllia1_P1, "CPSLLIA1_P1", MEPCOP1_32_INSN_CPSLLIA1_P1, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_CP_DATA_BUS_INT, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssqa1u_b_C3, "CPSSQA1U_B_C3", MEPCOP1_32_INSN_CPSSQA1U_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssqa1_b_C3, "CPSSQA1_B_C3", MEPCOP1_32_INSN_CPSSQA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssda1u_b_C3, "CPSSDA1U_B_C3", MEPCOP1_32_INSN_CPSSDA1U_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpssda1_b_C3, "CPSSDA1_B_C3", MEPCOP1_32_INSN_CPSSDA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmula1u_b_C3, "CPMULA1U_B_C3", MEPCOP1_32_INSN_CPMULA1U_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmula1_b_C3, "CPMULA1_B_C3", MEPCOP1_32_INSN_CPMULA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmulua1_h_C3, "CPMULUA1_H_C3", MEPCOP1_32_INSN_CPMULUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmulla1_h_C3, "CPMULLA1_H_C3", MEPCOP1_32_INSN_CPMULLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmulua1u_w_C3, "CPMULUA1U_W_C3", MEPCOP1_32_INSN_CPMULUA1U_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmulla1u_w_C3, "CPMULLA1U_W_C3", MEPCOP1_32_INSN_CPMULLA1U_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmulua1_w_C3, "CPMULUA1_W_C3", MEPCOP1_32_INSN_CPMULUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmulla1_w_C3, "CPMULLA1_W_C3", MEPCOP1_32_INSN_CPMULLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmada1u_b_C3, "CPMADA1U_B_C3", MEPCOP1_32_INSN_CPMADA1U_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8UQI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmada1_b_C3, "CPMADA1_B_C3", MEPCOP1_32_INSN_CPMADA1_B_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V8QI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmadua1_h_C3, "CPMADUA1_H_C3", MEPCOP1_32_INSN_CPMADUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmadla1_h_C3, "CPMADLA1_H_C3", MEPCOP1_32_INSN_CPMADLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmadua1u_w_C3, "CPMADUA1U_W_C3", MEPCOP1_32_INSN_CPMADUA1U_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmadla1u_w_C3, "CPMADLA1U_W_C3", MEPCOP1_32_INSN_CPMADLA1U_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmadua1_w_C3, "CPMADUA1_W_C3", MEPCOP1_32_INSN_CPMADUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmadla1_w_C3, "CPMADLA1_W_C3", MEPCOP1_32_INSN_CPMADLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmsbua1_h_C3, "CPMSBUA1_H_C3", MEPCOP1_32_INSN_CPMSBUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmsbla1_h_C3, "CPMSBLA1_H_C3", MEPCOP1_32_INSN_CPMSBLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmsbua1u_w_C3, "CPMSBUA1U_W_C3", MEPCOP1_32_INSN_CPMSBUA1U_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmsbla1u_w_C3, "CPMSBLA1U_W_C3", MEPCOP1_32_INSN_CPMSBLA1U_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2USI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmsbua1_w_C3, "CPMSBUA1_W_C3", MEPCOP1_32_INSN_CPMSBUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmsbla1_w_C3, "CPMSBLA1_W_C3", MEPCOP1_32_INSN_CPMSBLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmadua1_h_C3, "CPSMADUA1_H_C3", MEPCOP1_32_INSN_CPSMADUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmadla1_h_C3, "CPSMADLA1_H_C3", MEPCOP1_32_INSN_CPSMADLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmadua1_w_C3, "CPSMADUA1_W_C3", MEPCOP1_32_INSN_CPSMADUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmadla1_w_C3, "CPSMADLA1_W_C3", MEPCOP1_32_INSN_CPSMADLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmsbua1_h_C3, "CPSMSBUA1_H_C3", MEPCOP1_32_INSN_CPSMSBUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmsbla1_h_C3, "CPSMSBLA1_H_C3", MEPCOP1_32_INSN_CPSMSBLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmsbua1_w_C3, "CPSMSBUA1_W_C3", MEPCOP1_32_INSN_CPSMSBUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmsbla1_w_C3, "CPSMSBLA1_W_C3", MEPCOP1_32_INSN_CPSMSBLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmulslua1_h_C3, "CPMULSLUA1_H_C3", MEPCOP1_32_INSN_CPMULSLUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmulslla1_h_C3, "CPMULSLLA1_H_C3", MEPCOP1_32_INSN_CPMULSLLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmulslua1_w_C3, "CPMULSLUA1_W_C3", MEPCOP1_32_INSN_CPMULSLUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpmulslla1_w_C3, "CPMULSLLA1_W_C3", MEPCOP1_32_INSN_CPMULSLLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmadslua1_h_C3, "CPSMADSLUA1_H_C3", MEPCOP1_32_INSN_CPSMADSLUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmadslla1_h_C3, "CPSMADSLLA1_H_C3", MEPCOP1_32_INSN_CPSMADSLLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmadslua1_w_C3, "CPSMADSLUA1_W_C3", MEPCOP1_32_INSN_CPSMADSLUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmadslla1_w_C3, "CPSMADSLLA1_W_C3", MEPCOP1_32_INSN_CPSMADSLLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmsbslua1_h_C3, "CPSMSBSLUA1_H_C3", MEPCOP1_32_INSN_CPSMSBSLUA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmsbslla1_h_C3, "CPSMSBSLLA1_H_C3", MEPCOP1_32_INSN_CPSMSBSLLA1_H_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V4HI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmsbslua1_w_C3, "CPSMSBSLUA1_W_C3", MEPCOP1_32_INSN_CPSMSBSLUA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },
  { mepcop1_32_sem_cpsmsbslla1_w_C3, "CPSMSBSLLA1_W_C3", MEPCOP1_32_INSN_CPSMSBSLLA1_W_C3, { 0|(1<<CGEN_INSN_VOLATILE)|(1<<CGEN_INSN_OPTIONAL_CP_INSN), (1<<MACH_BASE), { 1, "\x10" }, CPTYPE_V2SI, CRET_VOID, 0, CONFIG_NONE, (1<<SLOTS_C3) } },

};

// Given a canonical virtual insn id, return the target specific one.

mepcop1_32_insn_type
mepcop1_32_idesc::lookup_virtual (virtual_insn_type vit)
{
  switch (vit)
    {
      case VIRTUAL_INSN_INVALID: return MEPCOP1_32_INSN_X_INVALID;
      case VIRTUAL_INSN_COND: return MEPCOP1_32_INSN_X_INVALID;
    }
  abort ();
}


// Declare extractor functions

static void
mepcop1_32_extract_sfmt_empty (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cmov_crn_rm (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cmov_rn_crm (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cmovc_ccrn_rm (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cmovc_rn_ccrm (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpadd3_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpfsftbi_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpssub3_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpmovtocsar0_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpmovtocsar1_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpmovtocc_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpmov_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpccadd_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpsrli3_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpsrli3_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpsrli3_w_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cdsrli3_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpmovi_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpmoviu_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpadda1u_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpaddua1_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpaddla1_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpsrla1_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);
static void
mepcop1_32_extract_sfmt_cpsrlia1_P1 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn);

// Fetch & decode instruction
void
mepcop1_32_scache::decode (mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn)
{
  /* Result of decoder.  */
  MEPCOP1_32_INSN_TYPE itype;

  {
    mepcop1_32_insn_word insn = base_insn;

    {
      unsigned int val = (((insn >> 17) & (15 << 7)) | ((insn >> 15) & (1 << 6)) | ((insn >> 10) & (31 << 1)) | ((insn >> 0) & (1 << 0)));
      switch (val)
      {
      case 0 : /* fall through */
      case 64 : /* fall through */
      case 128 : /* fall through */
      case 192 :
        if ((entire_insn & 0xfe0ff801) == 0xf0070000)
          { itype = MEPCOP1_32_INSN_CPADD3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1 :
        {
          unsigned int val = (((insn >> 21) & (3 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf0070001)
              { itype = MEPCOP1_32_INSN_CPADDA1U_B_C3; mepcop1_32_extract_sfmt_cpadda1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf0170001)
              { itype = MEPCOP1_32_INSN_CPADDA1_B_C3; mepcop1_32_extract_sfmt_cpadda1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf0470001)
              { itype = MEPCOP1_32_INSN_CPADDACA1U_B_C3; mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf0570001)
              { itype = MEPCOP1_32_INSN_CPADDACA1_B_C3; mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xfffff801) == 0xf0870001)
              { itype = MEPCOP1_32_INSN_CPSUBA1U_B_C3; mepcop1_32_extract_sfmt_cpadda1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfffff801) == 0xf0970001)
              { itype = MEPCOP1_32_INSN_CPSUBA1_B_C3; mepcop1_32_extract_sfmt_cpadda1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfffff801) == 0xf0c70001)
              { itype = MEPCOP1_32_INSN_CPSUBACA1U_B_C3; mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfffff801) == 0xf0d70001)
              { itype = MEPCOP1_32_INSN_CPSUBACA1_B_C3; mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 2 : /* fall through */
      case 66 : /* fall through */
      case 130 : /* fall through */
      case 194 :
        if ((entire_insn & 0xfe0ff801) == 0xf0070800)
          { itype = MEPCOP1_32_INSN_CPAND3_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 3 :
        {
          unsigned int val = (((insn >> 21) & (3 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf0070801)
              { itype = MEPCOP1_32_INSN_CPSSQA1U_B_C3; mepcop1_32_extract_sfmt_cpadda1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf0170801)
              { itype = MEPCOP1_32_INSN_CPSSQA1_B_C3; mepcop1_32_extract_sfmt_cpadda1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf0470801)
              { itype = MEPCOP1_32_INSN_CPSSDA1U_B_C3; mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf0570801)
              { itype = MEPCOP1_32_INSN_CPSSDA1_B_C3; mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xfffff801) == 0xf0870801)
              { itype = MEPCOP1_32_INSN_CPMULA1U_B_C3; mepcop1_32_extract_sfmt_cpadda1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfffff801) == 0xf0970801)
              { itype = MEPCOP1_32_INSN_CPMULA1_B_C3; mepcop1_32_extract_sfmt_cpadda1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfffff801) == 0xf0c70801)
              { itype = MEPCOP1_32_INSN_CPMULUA1U_W_C3; mepcop1_32_extract_sfmt_cpaddua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfffff801) == 0xf0d70801)
              { itype = MEPCOP1_32_INSN_CPMULLA1U_W_C3; mepcop1_32_extract_sfmt_cpaddla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 4 : /* fall through */
      case 68 : /* fall through */
      case 132 : /* fall through */
      case 196 :
        if ((entire_insn & 0xfe0ff801) == 0xf0071000)
          { itype = MEPCOP1_32_INSN_CPUNPACKU_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 5 :
        {
          unsigned int val = (((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff83f) == 0xf0071001)
              { itype = MEPCOP1_32_INSN_CPSRLA1_C3; mepcop1_32_extract_sfmt_cpsrla1_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff83f) == 0xf0171001)
              { itype = MEPCOP1_32_INSN_CPSRAA1_C3; mepcop1_32_extract_sfmt_cpsrla1_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 7 : /* fall through */
      case 71 : /* fall through */
      case 135 : /* fall through */
      case 199 : /* fall through */
      case 263 : /* fall through */
      case 327 : /* fall through */
      case 391 : /* fall through */
      case 455 :
        if ((entire_insn & 0xfc0fffff) == 0xf0071801)
          { itype = MEPCOP1_32_INSN_CPSRLIA1_P1; mepcop1_32_extract_sfmt_cpsrlia1_P1 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 8 : /* fall through */
      case 72 : /* fall through */
      case 136 : /* fall through */
      case 200 :
        if ((entire_insn & 0xfe0ff801) == 0xf0072000)
          { itype = MEPCOP1_32_INSN_CPSRL3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 9 : /* fall through */
      case 73 : /* fall through */
      case 137 : /* fall through */
      case 201 :
        {
          unsigned int val = (((insn >> 2) & (1 << 3)) | ((insn >> 1) & (7 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfe0fffff) == 0xf0072001)
              { itype = MEPCOP1_32_INSN_CPMOVA1_B_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfe0fffff) == 0xf0072005)
              { itype = MEPCOP1_32_INSN_CPMOVUA1_H_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfe0fffff) == 0xf0072007)
              { itype = MEPCOP1_32_INSN_CPMOVLA1_H_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xfe0fffff) == 0xf0072009)
              { itype = MEPCOP1_32_INSN_CPMOVUUA1_W_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfe0fffff) == 0xf007200b)
              { itype = MEPCOP1_32_INSN_CPMOVULA1_W_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfe0fffff) == 0xf007200d)
              { itype = MEPCOP1_32_INSN_CPMOVLUA1_W_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfe0fffff) == 0xf007200f)
              { itype = MEPCOP1_32_INSN_CPMOVLLA1_W_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 8 :
            if ((entire_insn & 0xfe0fffff) == 0xf0072021)
              { itype = MEPCOP1_32_INSN_CPPACKA1U_B_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 9 :
            if ((entire_insn & 0xfe0fffff) == 0xf0072023)
              { itype = MEPCOP1_32_INSN_CPPACKA1_B_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 10 :
            if ((entire_insn & 0xfe0fffff) == 0xf0072025)
              { itype = MEPCOP1_32_INSN_CPPACKUA1_H_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 11 :
            if ((entire_insn & 0xfe0fffff) == 0xf0072027)
              { itype = MEPCOP1_32_INSN_CPPACKLA1_H_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 12 :
            if ((entire_insn & 0xfe0fffff) == 0xf0072029)
              { itype = MEPCOP1_32_INSN_CPPACKUA1_W_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 13 :
            if ((entire_insn & 0xfe0fffff) == 0xf007202b)
              { itype = MEPCOP1_32_INSN_CPPACKLA1_W_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 14 :
            if ((entire_insn & 0xfe0fffff) == 0xf007202d)
              { itype = MEPCOP1_32_INSN_CPMOVHUA1_W_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 15 :
            if ((entire_insn & 0xfe0fffff) == 0xf007202f)
              { itype = MEPCOP1_32_INSN_CPMOVHLA1_W_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 10 : /* fall through */
      case 74 : /* fall through */
      case 138 : /* fall through */
      case 202 :
        if ((entire_insn & 0xfe0ff801) == 0xf0072800)
          { itype = MEPCOP1_32_INSN_CPSRA3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 12 : /* fall through */
      case 76 : /* fall through */
      case 140 : /* fall through */
      case 204 :
        if ((entire_insn & 0xfe0ff801) == 0xf0073000)
          { itype = MEPCOP1_32_INSN_CPSLL3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 18 : /* fall through */
      case 82 : /* fall through */
      case 146 : /* fall through */
      case 210 :
        if ((entire_insn & 0xfe0ff801) == 0xf0074800)
          { itype = MEPCOP1_32_INSN_CPEXTUADDU3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 20 : /* fall through */
      case 84 : /* fall through */
      case 148 : /* fall through */
      case 212 :
        if ((entire_insn & 0xfe0ff801) == 0xf0075000)
          { itype = MEPCOP1_32_INSN_CPAVEU3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 22 : /* fall through */
      case 86 : /* fall through */
      case 150 : /* fall through */
      case 214 :
        if ((entire_insn & 0xfe0ff801) == 0xf0075800)
          { itype = MEPCOP1_32_INSN_CPABSU3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 24 : /* fall through */
      case 88 : /* fall through */
      case 152 : /* fall through */
      case 216 :
        if ((entire_insn & 0xfe0ff801) == 0xf0076000)
          { itype = MEPCOP1_32_INSN_CPMAXU3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 26 : /* fall through */
      case 90 : /* fall through */
      case 154 : /* fall through */
      case 218 :
        if ((entire_insn & 0xfe0ff801) == 0xf0076800)
          { itype = MEPCOP1_32_INSN_CPMINU3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 32 :
        {
          unsigned int val = (((insn >> 1) & (31 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfe0fffff) == 0xf0078000)
              { itype = MEPCOP1_32_INSN_CPMOVFRCSAR0_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfe0fffff) == 0xf0078002)
              { itype = MEPCOP1_32_INSN_CPMOVFRCC_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 15 :
            if ((entire_insn & 0xfe0fffff) == 0xf007801e)
              { itype = MEPCOP1_32_INSN_CPMOVFRCSAR1_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 16 :
            if ((entire_insn & 0xfffff83f) == 0xf0078020)
              { itype = MEPCOP1_32_INSN_CPMOVTOCSAR0_C3; mepcop1_32_extract_sfmt_cpmovtocsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 17 :
            if ((entire_insn & 0xfffff83f) == 0xf0078022)
              { itype = MEPCOP1_32_INSN_CPMOVTOCC_C3; mepcop1_32_extract_sfmt_cpmovtocc_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 31 :
            if ((entire_insn & 0xfffff83f) == 0xf007803e)
              { itype = MEPCOP1_32_INSN_CPMOVTOCSAR1_C3; mepcop1_32_extract_sfmt_cpmovtocsar1_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 34 : /* fall through */
      case 98 : /* fall through */
      case 162 : /* fall through */
      case 226 :
        {
          unsigned int val = (((insn >> 1) & (31 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078800)
              { itype = MEPCOP1_32_INSN_CPMOV_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078802)
              { itype = MEPCOP1_32_INSN_CPABSZ_B_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078804)
              { itype = MEPCOP1_32_INSN_CPABSZ_H_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078806)
              { itype = MEPCOP1_32_INSN_CPABSZ_W_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078808)
              { itype = MEPCOP1_32_INSN_CPLDZ_H_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007880a)
              { itype = MEPCOP1_32_INSN_CPLDZ_W_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007880c)
              { itype = MEPCOP1_32_INSN_CPNORM_H_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007880e)
              { itype = MEPCOP1_32_INSN_CPNORM_W_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 8 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078810)
              { itype = MEPCOP1_32_INSN_CPHADDU_B_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 9 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078812)
              { itype = MEPCOP1_32_INSN_CPHADD_B_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 10 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078814)
              { itype = MEPCOP1_32_INSN_CPHADD_H_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 11 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078816)
              { itype = MEPCOP1_32_INSN_CPHADD_W_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 12 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078818)
              { itype = MEPCOP1_32_INSN_CPCCADD_B_C3; mepcop1_32_extract_sfmt_cpccadd_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 13 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007881a)
              { itype = MEPCOP1_32_INSN_CPBCAST_B_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 14 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007881c)
              { itype = MEPCOP1_32_INSN_CPBCAST_H_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 15 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007881e)
              { itype = MEPCOP1_32_INSN_CPBCAST_W_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 16 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078820)
              { itype = MEPCOP1_32_INSN_CPEXTUU_B_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 17 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078822)
              { itype = MEPCOP1_32_INSN_CPEXTU_B_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 18 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078824)
              { itype = MEPCOP1_32_INSN_CPEXTUU_H_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 19 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078826)
              { itype = MEPCOP1_32_INSN_CPEXTU_H_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 20 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078828)
              { itype = MEPCOP1_32_INSN_CPEXTLU_B_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 21 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007882a)
              { itype = MEPCOP1_32_INSN_CPEXTL_B_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 22 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007882c)
              { itype = MEPCOP1_32_INSN_CPEXTLU_H_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 23 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007882e)
              { itype = MEPCOP1_32_INSN_CPEXTL_H_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 24 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078830)
              { itype = MEPCOP1_32_INSN_CPCASTUB_H_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 25 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078832)
              { itype = MEPCOP1_32_INSN_CPCASTB_H_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 26 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078834)
              { itype = MEPCOP1_32_INSN_CDCASTUW_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 27 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078836)
              { itype = MEPCOP1_32_INSN_CDCASTW_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 28 :
            if ((entire_insn & 0xfe0ff83f) == 0xf0078838)
              { itype = MEPCOP1_32_INSN_CPCASTUB_W_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 29 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007883a)
              { itype = MEPCOP1_32_INSN_CPCASTB_W_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 30 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007883c)
              { itype = MEPCOP1_32_INSN_CPCASTUH_W_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 31 :
            if ((entire_insn & 0xfe0ff83f) == 0xf007883e)
              { itype = MEPCOP1_32_INSN_CPCASTH_W_C3; mepcop1_32_extract_sfmt_cpmov_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 36 :
        {
          unsigned int val = (((insn >> 21) & (3 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf0079000)
              { itype = MEPCOP1_32_INSN_CPCMPEQZ_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf0179000)
              { itype = MEPCOP1_32_INSN_CPCMPEQ_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf0579000)
              { itype = MEPCOP1_32_INSN_CPCMPEQ_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfffff801) == 0xf0979000)
              { itype = MEPCOP1_32_INSN_CPCMPNE_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfffff801) == 0xf0d79000)
              { itype = MEPCOP1_32_INSN_CPCMPNE_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 40 : /* fall through */
      case 104 : /* fall through */
      case 168 : /* fall through */
      case 232 : /* fall through */
      case 296 : /* fall through */
      case 360 : /* fall through */
      case 424 : /* fall through */
      case 488 :
        if ((entire_insn & 0xfc0ff801) == 0xf007a000)
          { itype = MEPCOP1_32_INSN_CPSRLI3_B_C3; mepcop1_32_extract_sfmt_cpsrli3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 42 : /* fall through */
      case 106 : /* fall through */
      case 170 : /* fall through */
      case 234 : /* fall through */
      case 298 : /* fall through */
      case 362 : /* fall through */
      case 426 : /* fall through */
      case 490 :
        if ((entire_insn & 0xfc0ff801) == 0xf007a800)
          { itype = MEPCOP1_32_INSN_CPSRAI3_B_C3; mepcop1_32_extract_sfmt_cpsrli3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 44 : /* fall through */
      case 108 : /* fall through */
      case 172 : /* fall through */
      case 236 : /* fall through */
      case 300 : /* fall through */
      case 364 : /* fall through */
      case 428 : /* fall through */
      case 492 :
        if ((entire_insn & 0xfc0ff801) == 0xf007b000)
          { itype = MEPCOP1_32_INSN_CPSLLI3_B_C3; mepcop1_32_extract_sfmt_cpsrli3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 48 : /* fall through */
      case 112 : /* fall through */
      case 176 : /* fall through */
      case 240 : /* fall through */
      case 304 : /* fall through */
      case 368 : /* fall through */
      case 432 : /* fall through */
      case 496 :
        if ((entire_insn & 0xfc0ff801) == 0xf007c000)
          { itype = MEPCOP1_32_INSN_CPCLIPIU3_W_C3; mepcop1_32_extract_sfmt_cpsrli3_w_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 50 : /* fall through */
      case 114 : /* fall through */
      case 178 : /* fall through */
      case 242 : /* fall through */
      case 306 : /* fall through */
      case 370 : /* fall through */
      case 434 : /* fall through */
      case 498 : /* fall through */
      case 562 : /* fall through */
      case 626 : /* fall through */
      case 690 : /* fall through */
      case 754 : /* fall through */
      case 818 : /* fall through */
      case 882 : /* fall through */
      case 946 : /* fall through */
      case 1010 : /* fall through */
      case 1074 : /* fall through */
      case 1138 : /* fall through */
      case 1202 : /* fall through */
      case 1266 : /* fall through */
      case 1330 : /* fall through */
      case 1394 : /* fall through */
      case 1458 : /* fall through */
      case 1522 : /* fall through */
      case 1586 : /* fall through */
      case 1650 : /* fall through */
      case 1714 : /* fall through */
      case 1778 : /* fall through */
      case 1842 : /* fall through */
      case 1906 : /* fall through */
      case 1970 : /* fall through */
      case 2034 :
        {
          unsigned int val = (((insn >> 1) & (7 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xf00ff83f) == 0xf007c800)
              { itype = MEPCOP1_32_INSN_CPMOVI_B_C3; mepcop1_32_extract_sfmt_cpmovi_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xf00ff83f) == 0xf007c804)
              { itype = MEPCOP1_32_INSN_CPMOVIU_H_C3; mepcop1_32_extract_sfmt_cpmoviu_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xf00ff83f) == 0xf007c806)
              { itype = MEPCOP1_32_INSN_CPMOVI_H_C3; mepcop1_32_extract_sfmt_cpmovi_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xf00ff83f) == 0xf007c808)
              { itype = MEPCOP1_32_INSN_CPMOVIU_W_C3; mepcop1_32_extract_sfmt_cpmoviu_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xf00ff83f) == 0xf007c80a)
              { itype = MEPCOP1_32_INSN_CPMOVI_W_C3; mepcop1_32_extract_sfmt_cpmovi_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xf00ff83f) == 0xf007c80c)
              { itype = MEPCOP1_32_INSN_CDMOVIU_C3; mepcop1_32_extract_sfmt_cpmoviu_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xf00ff83f) == 0xf007c80e)
              { itype = MEPCOP1_32_INSN_CDMOVI_C3; mepcop1_32_extract_sfmt_cpmovi_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 58 : /* fall through */
      case 122 : /* fall through */
      case 186 : /* fall through */
      case 250 : /* fall through */
      case 314 : /* fall through */
      case 378 : /* fall through */
      case 442 : /* fall through */
      case 506 : /* fall through */
      case 570 : /* fall through */
      case 634 : /* fall through */
      case 698 : /* fall through */
      case 762 : /* fall through */
      case 826 : /* fall through */
      case 890 : /* fall through */
      case 954 : /* fall through */
      case 1018 : /* fall through */
      case 1082 : /* fall through */
      case 1146 : /* fall through */
      case 1210 : /* fall through */
      case 1274 : /* fall through */
      case 1338 : /* fall through */
      case 1402 : /* fall through */
      case 1466 : /* fall through */
      case 1530 : /* fall through */
      case 1594 : /* fall through */
      case 1658 : /* fall through */
      case 1722 : /* fall through */
      case 1786 : /* fall through */
      case 1850 : /* fall through */
      case 1914 : /* fall through */
      case 1978 : /* fall through */
      case 2042 :
        if ((entire_insn & 0xf00ff801) == 0xf007e800)
          { itype = MEPCOP1_32_INSN_CPFSFTBI_C3; mepcop1_32_extract_sfmt_cpfsftbi_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 60 : /* fall through */
      case 124 : /* fall through */
      case 188 : /* fall through */
      case 252 : /* fall through */
      case 316 : /* fall through */
      case 380 : /* fall through */
      case 444 : /* fall through */
      case 508 : /* fall through */
      case 572 : /* fall through */
      case 636 : /* fall through */
      case 700 : /* fall through */
      case 764 : /* fall through */
      case 828 : /* fall through */
      case 892 : /* fall through */
      case 956 : /* fall through */
      case 1020 : /* fall through */
      case 1084 : /* fall through */
      case 1148 : /* fall through */
      case 1212 : /* fall through */
      case 1276 : /* fall through */
      case 1340 : /* fall through */
      case 1404 : /* fall through */
      case 1468 : /* fall through */
      case 1532 : /* fall through */
      case 1596 : /* fall through */
      case 1660 : /* fall through */
      case 1724 : /* fall through */
      case 1788 : /* fall through */
      case 1852 : /* fall through */
      case 1916 : /* fall through */
      case 1980 : /* fall through */
      case 2044 :
        {
          unsigned int val = (((insn >> 7) & (1 << 1)) | ((insn >> 1) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xf00ffff7) == 0xf007f000)
              { itype = MEPCOP1_32_INSN_CMOV_CRN_RM; mepcop1_32_extract_sfmt_cmov_crn_rm (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xf00ffff3) == 0xf007f002)
              { itype = MEPCOP1_32_INSN_CMOVC_CCRN_RM; mepcop1_32_extract_sfmt_cmovc_ccrn_rm (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xf00ffff7) == 0xf007f100)
              { itype = MEPCOP1_32_INSN_CMOVH_CRN_RM; mepcop1_32_extract_sfmt_cmov_crn_rm (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 61 : /* fall through */
      case 125 : /* fall through */
      case 189 : /* fall through */
      case 253 : /* fall through */
      case 317 : /* fall through */
      case 381 : /* fall through */
      case 445 : /* fall through */
      case 509 : /* fall through */
      case 573 : /* fall through */
      case 637 : /* fall through */
      case 701 : /* fall through */
      case 765 : /* fall through */
      case 829 : /* fall through */
      case 893 : /* fall through */
      case 957 : /* fall through */
      case 1021 : /* fall through */
      case 1085 : /* fall through */
      case 1149 : /* fall through */
      case 1213 : /* fall through */
      case 1277 : /* fall through */
      case 1341 : /* fall through */
      case 1405 : /* fall through */
      case 1469 : /* fall through */
      case 1533 : /* fall through */
      case 1597 : /* fall through */
      case 1661 : /* fall through */
      case 1725 : /* fall through */
      case 1789 : /* fall through */
      case 1853 : /* fall through */
      case 1917 : /* fall through */
      case 1981 : /* fall through */
      case 2045 :
        {
          unsigned int val = (((insn >> 7) & (1 << 1)) | ((insn >> 1) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xf00ffff7) == 0xf007f001)
              { itype = MEPCOP1_32_INSN_CMOV_RN_CRM; mepcop1_32_extract_sfmt_cmov_rn_crm (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xf00ffff3) == 0xf007f003)
              { itype = MEPCOP1_32_INSN_CMOVC_RN_CCRM; mepcop1_32_extract_sfmt_cmovc_rn_ccrm (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xf00ffff7) == 0xf007f101)
              { itype = MEPCOP1_32_INSN_CMOVH_RN_CRM; mepcop1_32_extract_sfmt_cmov_rn_crm (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 65 :
        {
          unsigned int val = (((insn >> 21) & (3 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf0270001)
              { itype = MEPCOP1_32_INSN_CPADDUA1_H_C3; mepcop1_32_extract_sfmt_cpaddua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf0370001)
              { itype = MEPCOP1_32_INSN_CPADDLA1_H_C3; mepcop1_32_extract_sfmt_cpaddla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf0670001)
              { itype = MEPCOP1_32_INSN_CPADDACUA1_H_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf0770001)
              { itype = MEPCOP1_32_INSN_CPADDACLA1_H_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xfffff801) == 0xf0a70001)
              { itype = MEPCOP1_32_INSN_CPSUBUA1_H_C3; mepcop1_32_extract_sfmt_cpaddua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfffff801) == 0xf0b70001)
              { itype = MEPCOP1_32_INSN_CPSUBLA1_H_C3; mepcop1_32_extract_sfmt_cpaddla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfffff801) == 0xf0e70001)
              { itype = MEPCOP1_32_INSN_CPSUBACUA1_H_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfffff801) == 0xf0f70001)
              { itype = MEPCOP1_32_INSN_CPSUBACLA1_H_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 67 :
        {
          unsigned int val = (((insn >> 21) & (1 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf0a70801)
              { itype = MEPCOP1_32_INSN_CPMULUA1_H_C3; mepcop1_32_extract_sfmt_cpaddua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf0b70801)
              { itype = MEPCOP1_32_INSN_CPMULLA1_H_C3; mepcop1_32_extract_sfmt_cpaddla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf0e70801)
              { itype = MEPCOP1_32_INSN_CPMULUA1_W_C3; mepcop1_32_extract_sfmt_cpaddua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf0f70801)
              { itype = MEPCOP1_32_INSN_CPMULLA1_W_C3; mepcop1_32_extract_sfmt_cpaddla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 69 :
        if ((entire_insn & 0xfffff83f) == 0xf0271001)
          { itype = MEPCOP1_32_INSN_CPSLLA1_C3; mepcop1_32_extract_sfmt_cpsrla1_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 96 : /* fall through */
      case 160 : /* fall through */
      case 224 :
        {
          unsigned int val = (((insn >> 1) & (15 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfe0fffff) == 0xf0078000)
              { itype = MEPCOP1_32_INSN_CPMOVFRCSAR0_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfe0fffff) == 0xf0078002)
              { itype = MEPCOP1_32_INSN_CPMOVFRCC_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 15 :
            if ((entire_insn & 0xfe0fffff) == 0xf007801e)
              { itype = MEPCOP1_32_INSN_CPMOVFRCSAR1_C3; mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 100 :
        {
          unsigned int val = (((insn >> 23) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf0379000)
              { itype = MEPCOP1_32_INSN_CPCMPEQ_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf0b79000)
              { itype = MEPCOP1_32_INSN_CPCMPNE_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 129 :
        {
          unsigned int val = (((insn >> 21) & (1 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf1070001)
              { itype = MEPCOP1_32_INSN_CPABSA1U_B_C3; mepcop1_32_extract_sfmt_cpadda1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf1170001)
              { itype = MEPCOP1_32_INSN_CPABSA1_B_C3; mepcop1_32_extract_sfmt_cpadda1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf1470001)
              { itype = MEPCOP1_32_INSN_CPSADA1U_B_C3; mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf1570001)
              { itype = MEPCOP1_32_INSN_CPSADA1_B_C3; mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 131 :
        {
          unsigned int val = (((insn >> 21) & (3 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf1070801)
              { itype = MEPCOP1_32_INSN_CPMADA1U_B_C3; mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf1170801)
              { itype = MEPCOP1_32_INSN_CPMADA1_B_C3; mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf1470801)
              { itype = MEPCOP1_32_INSN_CPMADUA1U_W_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf1570801)
              { itype = MEPCOP1_32_INSN_CPMADLA1U_W_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfffff801) == 0xf1c70801)
              { itype = MEPCOP1_32_INSN_CPMSBUA1U_W_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfffff801) == 0xf1d70801)
              { itype = MEPCOP1_32_INSN_CPMSBLA1U_W_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 164 :
        {
          unsigned int val = (((insn >> 21) & (3 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf1079000)
              { itype = MEPCOP1_32_INSN_CPCMPGTU_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf1179000)
              { itype = MEPCOP1_32_INSN_CPCMPGT_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf1479000)
              { itype = MEPCOP1_32_INSN_CPCMPGTU_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf1579000)
              { itype = MEPCOP1_32_INSN_CPCMPGT_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xfffff801) == 0xf1879000)
              { itype = MEPCOP1_32_INSN_CPCMPGEU_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfffff801) == 0xf1979000)
              { itype = MEPCOP1_32_INSN_CPCMPGE_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfffff801) == 0xf1c79000)
              { itype = MEPCOP1_32_INSN_CPCMPGEU_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfffff801) == 0xf1d79000)
              { itype = MEPCOP1_32_INSN_CPCMPGE_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 193 :
        {
          unsigned int val = (((insn >> 21) & (1 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf1270001)
              { itype = MEPCOP1_32_INSN_CPABSUA1_H_C3; mepcop1_32_extract_sfmt_cpaddua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf1370001)
              { itype = MEPCOP1_32_INSN_CPABSLA1_H_C3; mepcop1_32_extract_sfmt_cpaddla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf1670001)
              { itype = MEPCOP1_32_INSN_CPSADUA1_H_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf1770001)
              { itype = MEPCOP1_32_INSN_CPSADLA1_H_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 195 :
        {
          unsigned int val = (((insn >> 21) & (3 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf1270801)
              { itype = MEPCOP1_32_INSN_CPMADUA1_H_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf1370801)
              { itype = MEPCOP1_32_INSN_CPMADLA1_H_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf1670801)
              { itype = MEPCOP1_32_INSN_CPMADUA1_W_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf1770801)
              { itype = MEPCOP1_32_INSN_CPMADLA1_W_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xfffff801) == 0xf1a70801)
              { itype = MEPCOP1_32_INSN_CPMSBUA1_H_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfffff801) == 0xf1b70801)
              { itype = MEPCOP1_32_INSN_CPMSBLA1_H_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfffff801) == 0xf1e70801)
              { itype = MEPCOP1_32_INSN_CPMSBUA1_W_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfffff801) == 0xf1f70801)
              { itype = MEPCOP1_32_INSN_CPMSBLA1_W_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 228 :
        {
          unsigned int val = (((insn >> 23) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf1379000)
              { itype = MEPCOP1_32_INSN_CPCMPGT_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf1b79000)
              { itype = MEPCOP1_32_INSN_CPCMPGE_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 256 : /* fall through */
      case 320 : /* fall through */
      case 384 : /* fall through */
      case 448 :
        if ((entire_insn & 0xfe0ff801) == 0xf2070000)
          { itype = MEPCOP1_32_INSN_CPADD3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 257 :
        if ((entire_insn & 0xfffff801) == 0xf2070001)
          { itype = MEPCOP1_32_INSN_CPSETA1_H_C3; mepcop1_32_extract_sfmt_cpadda1u_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 258 : /* fall through */
      case 322 : /* fall through */
      case 386 : /* fall through */
      case 450 :
        if ((entire_insn & 0xfe0ff801) == 0xf2070800)
          { itype = MEPCOP1_32_INSN_CPOR3_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 260 : /* fall through */
      case 324 : /* fall through */
      case 388 : /* fall through */
      case 452 :
        if ((entire_insn & 0xfe0ff801) == 0xf2071000)
          { itype = MEPCOP1_32_INSN_CPUNPACKU_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 264 : /* fall through */
      case 328 : /* fall through */
      case 392 : /* fall through */
      case 456 :
        if ((entire_insn & 0xfe0ff801) == 0xf2072000)
          { itype = MEPCOP1_32_INSN_CPSSRL3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 266 : /* fall through */
      case 330 : /* fall through */
      case 394 : /* fall through */
      case 458 :
        if ((entire_insn & 0xfe0ff801) == 0xf2072800)
          { itype = MEPCOP1_32_INSN_CPSSRA3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 268 : /* fall through */
      case 332 : /* fall through */
      case 396 : /* fall through */
      case 460 :
        if ((entire_insn & 0xfe0ff801) == 0xf2073000)
          { itype = MEPCOP1_32_INSN_CPSSLL3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 274 : /* fall through */
      case 338 : /* fall through */
      case 402 : /* fall through */
      case 466 :
        if ((entire_insn & 0xfe0ff801) == 0xf2074800)
          { itype = MEPCOP1_32_INSN_CPEXTUADD3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 276 : /* fall through */
      case 340 : /* fall through */
      case 404 : /* fall through */
      case 468 :
        if ((entire_insn & 0xfe0ff801) == 0xf2075000)
          { itype = MEPCOP1_32_INSN_CPAVE3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 278 : /* fall through */
      case 342 : /* fall through */
      case 406 : /* fall through */
      case 470 :
        if ((entire_insn & 0xfe0ff801) == 0xf2075800)
          { itype = MEPCOP1_32_INSN_CPABS3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 280 : /* fall through */
      case 344 : /* fall through */
      case 408 : /* fall through */
      case 472 :
        if ((entire_insn & 0xfe0ff801) == 0xf2076000)
          { itype = MEPCOP1_32_INSN_CPMAX3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 282 : /* fall through */
      case 346 : /* fall through */
      case 410 : /* fall through */
      case 474 :
        if ((entire_insn & 0xfe0ff801) == 0xf2076800)
          { itype = MEPCOP1_32_INSN_CPMIN3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 292 :
        {
          unsigned int val = (((insn >> 22) & (3 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf2179000)
              { itype = MEPCOP1_32_INSN_CPACMPEQ_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf2579000)
              { itype = MEPCOP1_32_INSN_CPACMPEQ_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf2979000)
              { itype = MEPCOP1_32_INSN_CPACMPNE_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf2d79000)
              { itype = MEPCOP1_32_INSN_CPACMPNE_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 321 :
        {
          unsigned int val = (((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf2270001)
              { itype = MEPCOP1_32_INSN_CPSETUA1_W_C3; mepcop1_32_extract_sfmt_cpaddua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf2370001)
              { itype = MEPCOP1_32_INSN_CPSETLA1_W_C3; mepcop1_32_extract_sfmt_cpaddla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 356 :
        {
          unsigned int val = (((insn >> 23) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf2379000)
              { itype = MEPCOP1_32_INSN_CPACMPEQ_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf2b79000)
              { itype = MEPCOP1_32_INSN_CPACMPNE_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 420 :
        {
          unsigned int val = (((insn >> 21) & (3 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf3079000)
              { itype = MEPCOP1_32_INSN_CPACMPGTU_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf3179000)
              { itype = MEPCOP1_32_INSN_CPACMPGT_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf3479000)
              { itype = MEPCOP1_32_INSN_CPACMPGTU_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf3579000)
              { itype = MEPCOP1_32_INSN_CPACMPGT_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xfffff801) == 0xf3879000)
              { itype = MEPCOP1_32_INSN_CPACMPGEU_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfffff801) == 0xf3979000)
              { itype = MEPCOP1_32_INSN_CPACMPGE_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfffff801) == 0xf3c79000)
              { itype = MEPCOP1_32_INSN_CPACMPGEU_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfffff801) == 0xf3d79000)
              { itype = MEPCOP1_32_INSN_CPACMPGE_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 451 :
        {
          unsigned int val = (((insn >> 21) & (3 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf3270801)
              { itype = MEPCOP1_32_INSN_CPSMADUA1_H_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf3370801)
              { itype = MEPCOP1_32_INSN_CPSMADLA1_H_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf3670801)
              { itype = MEPCOP1_32_INSN_CPSMADUA1_W_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf3770801)
              { itype = MEPCOP1_32_INSN_CPSMADLA1_W_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xfffff801) == 0xf3a70801)
              { itype = MEPCOP1_32_INSN_CPSMSBUA1_H_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfffff801) == 0xf3b70801)
              { itype = MEPCOP1_32_INSN_CPSMSBLA1_H_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfffff801) == 0xf3e70801)
              { itype = MEPCOP1_32_INSN_CPSMSBUA1_W_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfffff801) == 0xf3f70801)
              { itype = MEPCOP1_32_INSN_CPSMSBLA1_W_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 484 :
        {
          unsigned int val = (((insn >> 23) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf3379000)
              { itype = MEPCOP1_32_INSN_CPACMPGT_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf3b79000)
              { itype = MEPCOP1_32_INSN_CPACMPGE_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 512 : /* fall through */
      case 576 : /* fall through */
      case 640 : /* fall through */
      case 704 :
        if ((entire_insn & 0xfe0ff801) == 0xf4070000)
          { itype = MEPCOP1_32_INSN_CPADD3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 514 : /* fall through */
      case 578 : /* fall through */
      case 642 : /* fall through */
      case 706 :
        if ((entire_insn & 0xfe0ff801) == 0xf4070800)
          { itype = MEPCOP1_32_INSN_CPNOR3_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 516 : /* fall through */
      case 580 : /* fall through */
      case 644 : /* fall through */
      case 708 :
        if ((entire_insn & 0xfe0ff801) == 0xf4071000)
          { itype = MEPCOP1_32_INSN_CPUNPACKU_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 519 : /* fall through */
      case 583 : /* fall through */
      case 647 : /* fall through */
      case 711 : /* fall through */
      case 775 : /* fall through */
      case 839 : /* fall through */
      case 903 : /* fall through */
      case 967 :
        if ((entire_insn & 0xfc0fffff) == 0xf4071801)
          { itype = MEPCOP1_32_INSN_CPSRAIA1_P1; mepcop1_32_extract_sfmt_cpsrlia1_P1 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 520 : /* fall through */
      case 584 : /* fall through */
      case 648 : /* fall through */
      case 712 :
        if ((entire_insn & 0xfe0ff801) == 0xf4072000)
          { itype = MEPCOP1_32_INSN_CPSRL3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 522 : /* fall through */
      case 586 : /* fall through */
      case 650 : /* fall through */
      case 714 :
        if ((entire_insn & 0xfe0ff801) == 0xf4072800)
          { itype = MEPCOP1_32_INSN_CPSRA3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 524 : /* fall through */
      case 588 : /* fall through */
      case 652 : /* fall through */
      case 716 :
        if ((entire_insn & 0xfe0ff801) == 0xf4073000)
          { itype = MEPCOP1_32_INSN_CPSLL3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 526 : /* fall through */
      case 590 : /* fall through */
      case 654 : /* fall through */
      case 718 :
        if ((entire_insn & 0xfe0ff801) == 0xf4073800)
          { itype = MEPCOP1_32_INSN_CPSLA3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 528 : /* fall through */
      case 592 : /* fall through */
      case 656 : /* fall through */
      case 720 :
        if ((entire_insn & 0xfe0ff801) == 0xf4074000)
          { itype = MEPCOP1_32_INSN_CPSADD3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 530 : /* fall through */
      case 594 : /* fall through */
      case 658 : /* fall through */
      case 722 :
        if ((entire_insn & 0xfe0ff801) == 0xf4074800)
          { itype = MEPCOP1_32_INSN_CPEXTLADDU3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 532 : /* fall through */
      case 596 : /* fall through */
      case 660 : /* fall through */
      case 724 :
        if ((entire_insn & 0xfe0ff801) == 0xf4075000)
          { itype = MEPCOP1_32_INSN_CPAVE3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 534 : /* fall through */
      case 598 : /* fall through */
      case 662 : /* fall through */
      case 726 :
        if ((entire_insn & 0xfe0ff801) == 0xf4075800)
          { itype = MEPCOP1_32_INSN_CPABS3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 548 :
        {
          unsigned int val = (((insn >> 22) & (3 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf4179000)
              { itype = MEPCOP1_32_INSN_CPOCMPEQ_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf4579000)
              { itype = MEPCOP1_32_INSN_CPOCMPEQ_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf4979000)
              { itype = MEPCOP1_32_INSN_CPOCMPNE_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf4d79000)
              { itype = MEPCOP1_32_INSN_CPOCMPNE_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 552 : /* fall through */
      case 616 : /* fall through */
      case 680 : /* fall through */
      case 744 : /* fall through */
      case 808 : /* fall through */
      case 872 : /* fall through */
      case 936 : /* fall through */
      case 1000 :
        if ((entire_insn & 0xfc0ff801) == 0xf407a000)
          { itype = MEPCOP1_32_INSN_CPSRLI3_H_C3; mepcop1_32_extract_sfmt_cpsrli3_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 554 : /* fall through */
      case 618 : /* fall through */
      case 682 : /* fall through */
      case 746 : /* fall through */
      case 810 : /* fall through */
      case 874 : /* fall through */
      case 938 : /* fall through */
      case 1002 :
        if ((entire_insn & 0xfc0ff801) == 0xf407a800)
          { itype = MEPCOP1_32_INSN_CPSRAI3_H_C3; mepcop1_32_extract_sfmt_cpsrli3_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 556 : /* fall through */
      case 620 : /* fall through */
      case 684 : /* fall through */
      case 748 : /* fall through */
      case 812 : /* fall through */
      case 876 : /* fall through */
      case 940 : /* fall through */
      case 1004 :
        if ((entire_insn & 0xfc0ff801) == 0xf407b000)
          { itype = MEPCOP1_32_INSN_CPSLLI3_H_C3; mepcop1_32_extract_sfmt_cpsrli3_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 558 : /* fall through */
      case 622 : /* fall through */
      case 686 : /* fall through */
      case 750 : /* fall through */
      case 814 : /* fall through */
      case 878 : /* fall through */
      case 942 : /* fall through */
      case 1006 :
        if ((entire_insn & 0xfc0ff801) == 0xf407b800)
          { itype = MEPCOP1_32_INSN_CPSLAI3_H_C3; mepcop1_32_extract_sfmt_cpsrli3_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 560 : /* fall through */
      case 624 : /* fall through */
      case 688 : /* fall through */
      case 752 : /* fall through */
      case 816 : /* fall through */
      case 880 : /* fall through */
      case 944 : /* fall through */
      case 1008 :
        if ((entire_insn & 0xfc0ff801) == 0xf407c000)
          { itype = MEPCOP1_32_INSN_CPCLIPI3_W_C3; mepcop1_32_extract_sfmt_cpsrli3_w_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 579 :
        {
          unsigned int val = (((insn >> 21) & (1 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf4a70801)
              { itype = MEPCOP1_32_INSN_CPMULSLUA1_H_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf4b70801)
              { itype = MEPCOP1_32_INSN_CPMULSLLA1_H_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf4e70801)
              { itype = MEPCOP1_32_INSN_CPMULSLUA1_W_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf4f70801)
              { itype = MEPCOP1_32_INSN_CPMULSLLA1_W_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 612 :
        {
          unsigned int val = (((insn >> 23) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf4379000)
              { itype = MEPCOP1_32_INSN_CPOCMPEQ_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf4b79000)
              { itype = MEPCOP1_32_INSN_CPOCMPNE_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 676 :
        {
          unsigned int val = (((insn >> 21) & (3 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf5079000)
              { itype = MEPCOP1_32_INSN_CPOCMPGTU_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf5179000)
              { itype = MEPCOP1_32_INSN_CPOCMPGT_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf5479000)
              { itype = MEPCOP1_32_INSN_CPOCMPGTU_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf5579000)
              { itype = MEPCOP1_32_INSN_CPOCMPGT_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xfffff801) == 0xf5879000)
              { itype = MEPCOP1_32_INSN_CPOCMPGEU_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfffff801) == 0xf5979000)
              { itype = MEPCOP1_32_INSN_CPOCMPGE_B_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfffff801) == 0xf5c79000)
              { itype = MEPCOP1_32_INSN_CPOCMPGEU_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfffff801) == 0xf5d79000)
              { itype = MEPCOP1_32_INSN_CPOCMPGE_W_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 740 :
        {
          unsigned int val = (((insn >> 23) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf5379000)
              { itype = MEPCOP1_32_INSN_CPOCMPGT_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf5b79000)
              { itype = MEPCOP1_32_INSN_CPOCMPGE_H_C3; mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 768 : /* fall through */
      case 832 : /* fall through */
      case 896 : /* fall through */
      case 960 :
        if ((entire_insn & 0xfe0ff801) == 0xf6070000)
          { itype = MEPCOP1_32_INSN_CDADD3_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 770 : /* fall through */
      case 834 : /* fall through */
      case 898 : /* fall through */
      case 962 :
        if ((entire_insn & 0xfe0ff801) == 0xf6070800)
          { itype = MEPCOP1_32_INSN_CPXOR3_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 776 : /* fall through */
      case 840 : /* fall through */
      case 904 : /* fall through */
      case 968 :
        if ((entire_insn & 0xfe0ff801) == 0xf6072000)
          { itype = MEPCOP1_32_INSN_CPSSRL3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 778 : /* fall through */
      case 842 : /* fall through */
      case 906 : /* fall through */
      case 970 :
        if ((entire_insn & 0xfe0ff801) == 0xf6072800)
          { itype = MEPCOP1_32_INSN_CPSSRA3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 780 : /* fall through */
      case 844 : /* fall through */
      case 908 : /* fall through */
      case 972 :
        if ((entire_insn & 0xfe0ff801) == 0xf6073000)
          { itype = MEPCOP1_32_INSN_CPSSLL3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 784 : /* fall through */
      case 848 : /* fall through */
      case 912 : /* fall through */
      case 976 :
        if ((entire_insn & 0xfe0ff801) == 0xf6074000)
          { itype = MEPCOP1_32_INSN_CPSADD3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 786 : /* fall through */
      case 850 : /* fall through */
      case 914 : /* fall through */
      case 978 :
        if ((entire_insn & 0xfe0ff801) == 0xf6074800)
          { itype = MEPCOP1_32_INSN_CPEXTLADD3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 788 : /* fall through */
      case 852 : /* fall through */
      case 916 : /* fall through */
      case 980 :
        if ((entire_insn & 0xfe0ff801) == 0xf6075000)
          { itype = MEPCOP1_32_INSN_CPAVE3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 792 : /* fall through */
      case 856 : /* fall through */
      case 920 : /* fall through */
      case 984 :
        if ((entire_insn & 0xfe0ff801) == 0xf6076000)
          { itype = MEPCOP1_32_INSN_CPMAX3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 794 : /* fall through */
      case 858 : /* fall through */
      case 922 : /* fall through */
      case 986 :
        if ((entire_insn & 0xfe0ff801) == 0xf6076800)
          { itype = MEPCOP1_32_INSN_CPMIN3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 963 :
        {
          unsigned int val = (((insn >> 21) & (3 << 1)) | ((insn >> 20) & (1 << 0)));
          switch (val)
          {
          case 0 :
            if ((entire_insn & 0xfffff801) == 0xf7270801)
              { itype = MEPCOP1_32_INSN_CPSMADSLUA1_H_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 1 :
            if ((entire_insn & 0xfffff801) == 0xf7370801)
              { itype = MEPCOP1_32_INSN_CPSMADSLLA1_H_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 2 :
            if ((entire_insn & 0xfffff801) == 0xf7670801)
              { itype = MEPCOP1_32_INSN_CPSMADSLUA1_W_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 3 :
            if ((entire_insn & 0xfffff801) == 0xf7770801)
              { itype = MEPCOP1_32_INSN_CPSMADSLLA1_W_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 4 :
            if ((entire_insn & 0xfffff801) == 0xf7a70801)
              { itype = MEPCOP1_32_INSN_CPSMSBSLUA1_H_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 5 :
            if ((entire_insn & 0xfffff801) == 0xf7b70801)
              { itype = MEPCOP1_32_INSN_CPSMSBSLLA1_H_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 6 :
            if ((entire_insn & 0xfffff801) == 0xf7e70801)
              { itype = MEPCOP1_32_INSN_CPSMSBSLUA1_W_C3; mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          case 7 :
            if ((entire_insn & 0xfffff801) == 0xf7f70801)
              { itype = MEPCOP1_32_INSN_CPSMSBSLLA1_W_C3; mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
            itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
          }
        }
      case 1024 : /* fall through */
      case 1088 : /* fall through */
      case 1152 : /* fall through */
      case 1216 :
        if ((entire_insn & 0xfe0ff801) == 0xf8070000)
          { itype = MEPCOP1_32_INSN_CPSUB3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1026 : /* fall through */
      case 1090 : /* fall through */
      case 1154 : /* fall through */
      case 1218 :
        if ((entire_insn & 0xfe0ff801) == 0xf8070800)
          { itype = MEPCOP1_32_INSN_CPSEL_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1028 : /* fall through */
      case 1092 : /* fall through */
      case 1156 : /* fall through */
      case 1220 :
        if ((entire_insn & 0xfe0ff801) == 0xf8071000)
          { itype = MEPCOP1_32_INSN_CPUNPACKL_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1030 : /* fall through */
      case 1094 : /* fall through */
      case 1158 : /* fall through */
      case 1222 :
        if ((entire_insn & 0xfe0ff801) == 0xf8071800)
          { itype = MEPCOP1_32_INSN_CPPACKU_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1031 : /* fall through */
      case 1095 : /* fall through */
      case 1159 : /* fall through */
      case 1223 : /* fall through */
      case 1287 : /* fall through */
      case 1351 : /* fall through */
      case 1415 : /* fall through */
      case 1479 :
        if ((entire_insn & 0xfc0fffff) == 0xf8071801)
          { itype = MEPCOP1_32_INSN_CPSLLIA1_P1; mepcop1_32_extract_sfmt_cpsrlia1_P1 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1032 : /* fall through */
      case 1096 : /* fall through */
      case 1160 : /* fall through */
      case 1224 :
        if ((entire_insn & 0xfe0ff801) == 0xf8072000)
          { itype = MEPCOP1_32_INSN_CPSRL3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1034 : /* fall through */
      case 1098 : /* fall through */
      case 1162 : /* fall through */
      case 1226 :
        if ((entire_insn & 0xfe0ff801) == 0xf8072800)
          { itype = MEPCOP1_32_INSN_CPSRA3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1036 : /* fall through */
      case 1100 : /* fall through */
      case 1164 : /* fall through */
      case 1228 :
        if ((entire_insn & 0xfe0ff801) == 0xf8073000)
          { itype = MEPCOP1_32_INSN_CPSLL3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1038 : /* fall through */
      case 1102 : /* fall through */
      case 1166 : /* fall through */
      case 1230 :
        if ((entire_insn & 0xfe0ff801) == 0xf8073800)
          { itype = MEPCOP1_32_INSN_CPSLA3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1042 : /* fall through */
      case 1106 : /* fall through */
      case 1170 : /* fall through */
      case 1234 :
        if ((entire_insn & 0xfe0ff801) == 0xf8074800)
          { itype = MEPCOP1_32_INSN_CPEXTUSUBU3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1044 : /* fall through */
      case 1108 : /* fall through */
      case 1172 : /* fall through */
      case 1236 :
        if ((entire_insn & 0xfe0ff801) == 0xf8075000)
          { itype = MEPCOP1_32_INSN_CPADDSRU3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1048 : /* fall through */
      case 1112 : /* fall through */
      case 1176 : /* fall through */
      case 1240 :
        if ((entire_insn & 0xfe0ff801) == 0xf8076000)
          { itype = MEPCOP1_32_INSN_CPMAXU3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1050 : /* fall through */
      case 1114 : /* fall through */
      case 1178 : /* fall through */
      case 1242 :
        if ((entire_insn & 0xfe0ff801) == 0xf8076800)
          { itype = MEPCOP1_32_INSN_CPMINU3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1064 : /* fall through */
      case 1128 : /* fall through */
      case 1192 : /* fall through */
      case 1256 : /* fall through */
      case 1320 : /* fall through */
      case 1384 : /* fall through */
      case 1448 : /* fall through */
      case 1512 :
        if ((entire_insn & 0xfc0ff801) == 0xf807a000)
          { itype = MEPCOP1_32_INSN_CPSRLI3_W_C3; mepcop1_32_extract_sfmt_cpsrli3_w_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1066 : /* fall through */
      case 1130 : /* fall through */
      case 1194 : /* fall through */
      case 1258 : /* fall through */
      case 1322 : /* fall through */
      case 1386 : /* fall through */
      case 1450 : /* fall through */
      case 1514 :
        if ((entire_insn & 0xfc0ff801) == 0xf807a800)
          { itype = MEPCOP1_32_INSN_CPSRAI3_W_C3; mepcop1_32_extract_sfmt_cpsrli3_w_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1068 : /* fall through */
      case 1132 : /* fall through */
      case 1196 : /* fall through */
      case 1260 : /* fall through */
      case 1324 : /* fall through */
      case 1388 : /* fall through */
      case 1452 : /* fall through */
      case 1516 :
        if ((entire_insn & 0xfc0ff801) == 0xf807b000)
          { itype = MEPCOP1_32_INSN_CPSLLI3_W_C3; mepcop1_32_extract_sfmt_cpsrli3_w_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1070 : /* fall through */
      case 1134 : /* fall through */
      case 1198 : /* fall through */
      case 1262 : /* fall through */
      case 1326 : /* fall through */
      case 1390 : /* fall through */
      case 1454 : /* fall through */
      case 1518 :
        if ((entire_insn & 0xfc0ff801) == 0xf807b800)
          { itype = MEPCOP1_32_INSN_CPSLAI3_W_C3; mepcop1_32_extract_sfmt_cpsrli3_w_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1072 : /* fall through */
      case 1136 : /* fall through */
      case 1200 : /* fall through */
      case 1264 : /* fall through */
      case 1328 : /* fall through */
      case 1392 : /* fall through */
      case 1456 : /* fall through */
      case 1520 :
        if ((entire_insn & 0xfc0ff801) == 0xf807c000)
          { itype = MEPCOP1_32_INSN_CDCLIPIU3_C3; mepcop1_32_extract_sfmt_cdsrli3_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1280 : /* fall through */
      case 1344 : /* fall through */
      case 1408 : /* fall through */
      case 1472 :
        if ((entire_insn & 0xfe0ff801) == 0xfa070000)
          { itype = MEPCOP1_32_INSN_CPSUB3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1284 : /* fall through */
      case 1348 : /* fall through */
      case 1412 : /* fall through */
      case 1476 :
        if ((entire_insn & 0xfe0ff801) == 0xfa071000)
          { itype = MEPCOP1_32_INSN_CPUNPACKL_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1286 : /* fall through */
      case 1350 : /* fall through */
      case 1414 : /* fall through */
      case 1478 :
        if ((entire_insn & 0xfe0ff801) == 0xfa071800)
          { itype = MEPCOP1_32_INSN_CPPACK_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1288 : /* fall through */
      case 1352 : /* fall through */
      case 1416 : /* fall through */
      case 1480 :
        if ((entire_insn & 0xfe0ff801) == 0xfa072000)
          { itype = MEPCOP1_32_INSN_CPSSRL3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1290 : /* fall through */
      case 1354 : /* fall through */
      case 1418 : /* fall through */
      case 1482 :
        if ((entire_insn & 0xfe0ff801) == 0xfa072800)
          { itype = MEPCOP1_32_INSN_CPSSRA3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1292 : /* fall through */
      case 1356 : /* fall through */
      case 1420 : /* fall through */
      case 1484 :
        if ((entire_insn & 0xfe0ff801) == 0xfa073000)
          { itype = MEPCOP1_32_INSN_CPSSLL3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1298 : /* fall through */
      case 1362 : /* fall through */
      case 1426 : /* fall through */
      case 1490 :
        if ((entire_insn & 0xfe0ff801) == 0xfa074800)
          { itype = MEPCOP1_32_INSN_CPEXTUSUB3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1300 : /* fall through */
      case 1364 : /* fall through */
      case 1428 : /* fall through */
      case 1492 :
        if ((entire_insn & 0xfe0ff801) == 0xfa075000)
          { itype = MEPCOP1_32_INSN_CPADDSR3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1304 : /* fall through */
      case 1368 : /* fall through */
      case 1432 : /* fall through */
      case 1496 :
        if ((entire_insn & 0xfe0ff801) == 0xfa076000)
          { itype = MEPCOP1_32_INSN_CPMAX3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1306 : /* fall through */
      case 1370 : /* fall through */
      case 1434 : /* fall through */
      case 1498 :
        if ((entire_insn & 0xfe0ff801) == 0xfa076800)
          { itype = MEPCOP1_32_INSN_CPMIN3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1536 : /* fall through */
      case 1600 : /* fall through */
      case 1664 : /* fall through */
      case 1728 :
        if ((entire_insn & 0xfe0ff801) == 0xfc070000)
          { itype = MEPCOP1_32_INSN_CPSUB3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1538 : /* fall through */
      case 1602 : /* fall through */
      case 1666 : /* fall through */
      case 1730 :
        if ((entire_insn & 0xfe0ff801) == 0xfc070800)
          { itype = MEPCOP1_32_INSN_CPFSFTBS0_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1540 : /* fall through */
      case 1604 : /* fall through */
      case 1668 : /* fall through */
      case 1732 :
        if ((entire_insn & 0xfe0ff801) == 0xfc071000)
          { itype = MEPCOP1_32_INSN_CPUNPACKL_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1544 : /* fall through */
      case 1608 : /* fall through */
      case 1672 : /* fall through */
      case 1736 :
        if ((entire_insn & 0xfe0ff801) == 0xfc072000)
          { itype = MEPCOP1_32_INSN_CDSRL3_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1546 : /* fall through */
      case 1610 : /* fall through */
      case 1674 : /* fall through */
      case 1738 :
        if ((entire_insn & 0xfe0ff801) == 0xfc072800)
          { itype = MEPCOP1_32_INSN_CDSRA3_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1548 : /* fall through */
      case 1612 : /* fall through */
      case 1676 : /* fall through */
      case 1740 :
        if ((entire_insn & 0xfe0ff801) == 0xfc073000)
          { itype = MEPCOP1_32_INSN_CDSLL3_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1552 : /* fall through */
      case 1616 : /* fall through */
      case 1680 : /* fall through */
      case 1744 :
        if ((entire_insn & 0xfe0ff801) == 0xfc074000)
          { itype = MEPCOP1_32_INSN_CPSSUB3_H_C3; mepcop1_32_extract_sfmt_cpssub3_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1554 : /* fall through */
      case 1618 : /* fall through */
      case 1682 : /* fall through */
      case 1746 :
        if ((entire_insn & 0xfe0ff801) == 0xfc074800)
          { itype = MEPCOP1_32_INSN_CPEXTLSUBU3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1556 : /* fall through */
      case 1620 : /* fall through */
      case 1684 : /* fall through */
      case 1748 :
        if ((entire_insn & 0xfe0ff801) == 0xfc075000)
          { itype = MEPCOP1_32_INSN_CPADDSR3_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1576 : /* fall through */
      case 1640 : /* fall through */
      case 1704 : /* fall through */
      case 1768 : /* fall through */
      case 1832 : /* fall through */
      case 1896 : /* fall through */
      case 1960 : /* fall through */
      case 2024 :
        if ((entire_insn & 0xfc0ff801) == 0xfc07a000)
          { itype = MEPCOP1_32_INSN_CDSRLI3_C3; mepcop1_32_extract_sfmt_cdsrli3_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1578 : /* fall through */
      case 1642 : /* fall through */
      case 1706 : /* fall through */
      case 1770 : /* fall through */
      case 1834 : /* fall through */
      case 1898 : /* fall through */
      case 1962 : /* fall through */
      case 2026 :
        if ((entire_insn & 0xfc0ff801) == 0xfc07a800)
          { itype = MEPCOP1_32_INSN_CDSRAI3_C3; mepcop1_32_extract_sfmt_cdsrli3_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1580 : /* fall through */
      case 1644 : /* fall through */
      case 1708 : /* fall through */
      case 1772 : /* fall through */
      case 1836 : /* fall through */
      case 1900 : /* fall through */
      case 1964 : /* fall through */
      case 2028 :
        if ((entire_insn & 0xfc0ff801) == 0xfc07b000)
          { itype = MEPCOP1_32_INSN_CDSLLI3_C3; mepcop1_32_extract_sfmt_cdsrli3_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1584 : /* fall through */
      case 1648 : /* fall through */
      case 1712 : /* fall through */
      case 1776 : /* fall through */
      case 1840 : /* fall through */
      case 1904 : /* fall through */
      case 1968 : /* fall through */
      case 2032 :
        if ((entire_insn & 0xfc0ff801) == 0xfc07c000)
          { itype = MEPCOP1_32_INSN_CDCLIPI3_C3; mepcop1_32_extract_sfmt_cdsrli3_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1792 : /* fall through */
      case 1856 : /* fall through */
      case 1920 : /* fall through */
      case 1984 :
        if ((entire_insn & 0xfe0ff801) == 0xfe070000)
          { itype = MEPCOP1_32_INSN_CDSUB3_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1794 : /* fall through */
      case 1858 : /* fall through */
      case 1922 : /* fall through */
      case 1986 :
        if ((entire_insn & 0xfe0ff801) == 0xfe070800)
          { itype = MEPCOP1_32_INSN_CPFSFTBS1_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1798 : /* fall through */
      case 1862 : /* fall through */
      case 1926 : /* fall through */
      case 1990 :
        if ((entire_insn & 0xfe0ff801) == 0xfe071800)
          { itype = MEPCOP1_32_INSN_CPPACK_H_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1808 : /* fall through */
      case 1872 : /* fall through */
      case 1936 : /* fall through */
      case 2000 :
        if ((entire_insn & 0xfe0ff801) == 0xfe074000)
          { itype = MEPCOP1_32_INSN_CPSSUB3_W_C3; mepcop1_32_extract_sfmt_cpssub3_h_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1810 : /* fall through */
      case 1874 : /* fall through */
      case 1938 : /* fall through */
      case 2002 :
        if ((entire_insn & 0xfe0ff801) == 0xfe074800)
          { itype = MEPCOP1_32_INSN_CPEXTLSUB3_B_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      case 1812 : /* fall through */
      case 1876 : /* fall through */
      case 1940 : /* fall through */
      case 2004 :
        if ((entire_insn & 0xfe0ff801) == 0xfe075000)
          { itype = MEPCOP1_32_INSN_CPADDSR3_W_C3; mepcop1_32_extract_sfmt_cpadd3_b_C3 (this, current_cpu, pc, base_insn, entire_insn); goto done; }
        itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      default : itype = MEPCOP1_32_INSN_X_INVALID; mepcop1_32_extract_sfmt_empty (this, current_cpu, pc, base_insn, entire_insn); goto done;
      }
    }

  }

  /* The instruction has been decoded and fields extracted.  */
  done:

  this->addr = pc;
  // FIXME: To be redone (to handle ISA variants).
  this->idesc = & mepcop1_32_idesc::idesc_table[itype];
  // ??? record semantic handler?
  assert(this->idesc->sem_index == itype);
}

void
mepcop1_32_extract_sfmt_empty (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.fmt_empty.f


  /* Record the fields for the semantic handler.  */
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_empty)\t"
        << endl;
    }

#undef FLD
}

void
mepcop1_32_extract_sfmt_cmov_crn_rm (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cmov_crn_rm.f
    UINT f_crnx_lo;
    UINT f_rm;
    UINT f_crnx_hi;
    UINT f_crnx;

    f_crnx_lo = EXTRACT_MSB0_UINT (insn, 32, 4, 4);
    f_rm = EXTRACT_MSB0_UINT (insn, 32, 8, 4);
    f_crnx_hi = EXTRACT_MSB0_UINT (insn, 32, 28, 1);
  f_crnx = ((((f_crnx_hi) << (4))) | (f_crnx_lo));

  /* Record the fields for the semantic handler.  */
  FLD (f_crnx) = f_crnx;
  FLD (f_rm) = f_rm;
  FLD (i_rm) = & current_cpu->hardware.h_gpr[f_rm];
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cmov_crn_rm)\t"
        << " f_crnx:0x" << hex << f_crnx << dec
        << " f_rm:0x" << hex << f_rm << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
      FLD (in_rm) = f_rm;
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cmov_rn_crm (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cmov_rn_crm.f
    UINT f_crnx_lo;
    UINT f_rm;
    UINT f_crnx_hi;
    UINT f_crnx;

    f_crnx_lo = EXTRACT_MSB0_UINT (insn, 32, 4, 4);
    f_rm = EXTRACT_MSB0_UINT (insn, 32, 8, 4);
    f_crnx_hi = EXTRACT_MSB0_UINT (insn, 32, 28, 1);
  f_crnx = ((((f_crnx_hi) << (4))) | (f_crnx_lo));

  /* Record the fields for the semantic handler.  */
  FLD (f_crnx) = f_crnx;
  FLD (f_rm) = f_rm;
  FLD (i_rm) = & current_cpu->hardware.h_gpr[f_rm];
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cmov_rn_crm)\t"
        << " f_crnx:0x" << hex << f_crnx << dec
        << " f_rm:0x" << hex << f_rm << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
      FLD (out_rm) = f_rm;
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cmovc_ccrn_rm (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cmovc_ccrn_rm.f
    UINT f_ivc2_ccrn_c3lo;
    UINT f_rm;
    UINT f_ivc2_ccrn_c3hi;
    UINT f_ivc2_ccrn_c3;

    f_ivc2_ccrn_c3lo = EXTRACT_MSB0_UINT (insn, 32, 4, 4);
    f_rm = EXTRACT_MSB0_UINT (insn, 32, 8, 4);
    f_ivc2_ccrn_c3hi = EXTRACT_MSB0_UINT (insn, 32, 28, 2);
  f_ivc2_ccrn_c3 = ((((f_ivc2_ccrn_c3hi) << (4))) | (f_ivc2_ccrn_c3lo));

  /* Record the fields for the semantic handler.  */
  FLD (f_rm) = f_rm;
  FLD (f_ivc2_ccrn_c3) = f_ivc2_ccrn_c3;
  FLD (i_rm) = & current_cpu->hardware.h_gpr[f_rm];
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cmovc_ccrn_rm)\t"
        << " f_rm:0x" << hex << f_rm << dec
        << " f_ivc2_ccrn_c3:0x" << hex << f_ivc2_ccrn_c3 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
      FLD (in_rm) = f_rm;
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cmovc_rn_ccrm (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cmovc_rn_ccrm.f
    UINT f_ivc2_ccrn_c3lo;
    UINT f_rm;
    UINT f_ivc2_ccrn_c3hi;
    UINT f_ivc2_ccrn_c3;

    f_ivc2_ccrn_c3lo = EXTRACT_MSB0_UINT (insn, 32, 4, 4);
    f_rm = EXTRACT_MSB0_UINT (insn, 32, 8, 4);
    f_ivc2_ccrn_c3hi = EXTRACT_MSB0_UINT (insn, 32, 28, 2);
  f_ivc2_ccrn_c3 = ((((f_ivc2_ccrn_c3hi) << (4))) | (f_ivc2_ccrn_c3lo));

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_ccrn_c3) = f_ivc2_ccrn_c3;
  FLD (f_rm) = f_rm;
  FLD (i_rm) = & current_cpu->hardware.h_gpr[f_rm];
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cmovc_rn_ccrm)\t"
        << " f_ivc2_ccrn_c3:0x" << hex << f_ivc2_ccrn_c3 << dec
        << " f_rm:0x" << hex << f_rm << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
      FLD (out_rm) = f_rm;
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpadd3_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpfsftbi_C3.f
    UINT f_ivc2_5u7;
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_5u7 = EXTRACT_MSB0_UINT (insn, 32, 7, 5);
    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  FLD (f_ivc2_5u7) = f_ivc2_5u7;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpadd3_b_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << " f_ivc2_5u7:0x" << hex << f_ivc2_5u7 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpfsftbi_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpfsftbi_C3.f
    UINT f_ivc2_3u4;
    UINT f_ivc2_5u7;
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_3u4 = EXTRACT_MSB0_UINT (insn, 32, 4, 3);
    f_ivc2_5u7 = EXTRACT_MSB0_UINT (insn, 32, 7, 5);
    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  FLD (f_ivc2_3u4) = f_ivc2_3u4;
  FLD (f_ivc2_5u7) = f_ivc2_5u7;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpfsftbi_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << " f_ivc2_3u4:0x" << hex << f_ivc2_3u4 << dec
        << " f_ivc2_5u7:0x" << hex << f_ivc2_5u7 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpssub3_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpfsftbi_C3.f
    UINT f_ivc2_5u7;
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_5u7 = EXTRACT_MSB0_UINT (insn, 32, 7, 5);
    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  FLD (f_ivc2_5u7) = f_ivc2_5u7;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpssub3_h_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << " f_ivc2_5u7:0x" << hex << f_ivc2_5u7 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpmovfrcsar0_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpfsftbi_C3.f
    UINT f_ivc2_5u7;

    f_ivc2_5u7 = EXTRACT_MSB0_UINT (insn, 32, 7, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u7) = f_ivc2_5u7;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpmovfrcsar0_C3)\t"
        << " f_ivc2_5u7:0x" << hex << f_ivc2_5u7 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpmovtocsar0_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpmoviu_h_C3.f
    UINT f_ivc2_5u21;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpmovtocsar0_C3)\t"
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpmovtocsar1_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpmoviu_h_C3.f
    UINT f_ivc2_5u21;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpmovtocsar1_C3)\t"
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpmovtocc_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpmoviu_h_C3.f
    UINT f_ivc2_5u21;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpmovtocc_C3)\t"
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpmov_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpfsftbi_C3.f
    UINT f_ivc2_5u7;
    UINT f_ivc2_5u21;

    f_ivc2_5u7 = EXTRACT_MSB0_UINT (insn, 32, 7, 5);
    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  FLD (f_ivc2_5u7) = f_ivc2_5u7;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpmov_C3)\t"
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << " f_ivc2_5u7:0x" << hex << f_ivc2_5u7 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpccadd_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpmoviu_h_C3.f
    UINT f_ivc2_5u21;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpccadd_b_C3)\t"
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpcmpeqz_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cdsrli3_C3.f
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpcmpeqz_b_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpsrli3_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpsrli3_b_C3.f
    UINT f_ivc2_3u9;
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_3u9 = EXTRACT_MSB0_UINT (insn, 32, 9, 3);
    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_3u9) = f_ivc2_3u9;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpsrli3_b_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_3u9:0x" << hex << f_ivc2_3u9 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpsrli3_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpsrli3_h_C3.f
    UINT f_ivc2_4u8;
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_4u8 = EXTRACT_MSB0_UINT (insn, 32, 8, 4);
    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_4u8) = f_ivc2_4u8;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpsrli3_h_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_4u8:0x" << hex << f_ivc2_4u8 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpsrli3_w_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpfsftbi_C3.f
    UINT f_ivc2_5u7;
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_5u7 = EXTRACT_MSB0_UINT (insn, 32, 7, 5);
    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_5u7) = f_ivc2_5u7;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpsrli3_w_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_5u7:0x" << hex << f_ivc2_5u7 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cdsrli3_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cdsrli3_C3.f
    UINT f_ivc2_6u6;
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_6u6 = EXTRACT_MSB0_UINT (insn, 32, 6, 6);
    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_6u6) = f_ivc2_6u6;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cdsrli3_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_6u6:0x" << hex << f_ivc2_6u6 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpmovi_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpmovi_b_C3.f
    INT f_ivc2_8s4;
    UINT f_ivc2_5u21;

    f_ivc2_8s4 = EXTRACT_MSB0_SINT (insn, 32, 4, 8);
    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_8s4) = f_ivc2_8s4;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpmovi_b_C3)\t"
        << " f_ivc2_8s4:0x" << hex << f_ivc2_8s4 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpmoviu_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpmoviu_h_C3.f
    UINT f_ivc2_8u4;
    UINT f_ivc2_5u21;

    f_ivc2_8u4 = EXTRACT_MSB0_UINT (insn, 32, 4, 8);
    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_8u4) = f_ivc2_8u4;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpmoviu_h_C3)\t"
        << " f_ivc2_8u4:0x" << hex << f_ivc2_8u4 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpadda1u_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cdsrli3_C3.f
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpadda1u_b_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpaddua1_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cdsrli3_C3.f
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpaddua1_h_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpaddla1_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cdsrli3_C3.f
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpaddla1_h_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpaddaca1u_b_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cdsrli3_C3.f
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpaddaca1u_b_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpaddacua1_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cdsrli3_C3.f
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpaddacua1_h_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpaddacla1_h_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cdsrli3_C3.f
    UINT f_ivc2_5u21;
    UINT f_ivc2_5u26;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);
    f_ivc2_5u26 = EXTRACT_MSB0_UINT (insn, 32, 26, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u26) = f_ivc2_5u26;
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpaddacla1_h_C3)\t"
        << " f_ivc2_5u26:0x" << hex << f_ivc2_5u26 << dec
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpsrla1_C3 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpmoviu_h_C3.f
    UINT f_ivc2_5u21;

    f_ivc2_5u21 = EXTRACT_MSB0_UINT (insn, 32, 21, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u21) = f_ivc2_5u21;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpsrla1_C3)\t"
        << " f_ivc2_5u21:0x" << hex << f_ivc2_5u21 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

void
mepcop1_32_extract_sfmt_cpsrlia1_P1 (mepcop1_32_scache* abuf, mep_ext1_cpu* current_cpu, PCADDR pc, mepcop1_32_insn_word base_insn, mepcop1_32_insn_word entire_insn){
    mepcop1_32_insn_word insn = entire_insn;
#define FLD(f) abuf->fields.sfmt_cpfsftbi_C3.f
    UINT f_ivc2_5u7;

    f_ivc2_5u7 = EXTRACT_MSB0_UINT (insn, 32, 7, 5);

  /* Record the fields for the semantic handler.  */
  FLD (f_ivc2_5u7) = f_ivc2_5u7;
  if (UNLIKELY(current_cpu->trace_extract_p))
    {
      current_cpu->trace_stream 
        << "0x" << hex << pc << dec << " (sfmt_cpsrlia1_P1)\t"
        << " f_ivc2_5u7:0x" << hex << f_ivc2_5u7 << dec
        << endl;
    }

  /* Record the fields for profiling.  */
  if (UNLIKELY (current_cpu->trace_counter_p || current_cpu->final_insn_count_p))
    {
    }
#undef FLD
}

