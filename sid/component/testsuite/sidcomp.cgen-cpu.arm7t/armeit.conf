# FIQ testcase configuration file.
# This file is copied to the testsuite build directory with
# $prefix, $srcdir, and $testprog properly substituted.

set main auto-print? no

load libcgencpu.la cgen_component_library
load libmemory.la mem_component_library
load libmapper.la mapper_component_library
load libloader.la loader_component_library
load libgloss.la gloss_component_library
load libtclapi.la tcl_bridge_library
load libsched.la sched_component_library
load libconsoles.la console_component_library
load libglue.la glue_component_library

# components
new sw-load-elf loader
new hw-mapper-basic bus
new hw-cpu-arm7t cpu
new sw-gloss-arm/angel angel
new hw-memory-ram/rom-basic mem
new bridge-tcl tcl
new sid-io-stdio stdio
new sid-sched-host sched
new hw-glue-sequence-2 init-sequence

# relationships
relate angel cpu cpu

set sched num-clients 1
set sched 0-regular? 1
set sched 0-time 50
set loader file @-testprog-@
set loader verbose? 0
set mem size 0x10000

# pin connections
connect-pin main starting -> init-sequence input
connect-pin init-sequence output-0 -> cpu reset!
connect-pin init-sequence output-1 -> loader load!
connect-pin main perform-activity -> cpu step!
connect-pin main perform-activity -> sched advance
connect-pin loader start-pc-set -> cpu start-pc-set!
connect-pin loader endian-set -> cpu endian-set!
connect-pin angel process-signal -> main stop!
connect-pin cpu trap-code -> angel trap-code
connect-pin cpu trap <-> angel trap
connect-pin angel debug-tx -> stdio stdout
connect-pin angel debug-rx <- stdio stdin
connect-pin sched 0-event -> stdio poll

# Load the tcl code.
set tcl load! @-srcdir-@/sidcomp.cgen-cpu.arm7t/armeit.tcl

# Can't connect these pins until armeit.tcl is loaded.
connect-pin tcl nfiq! -> cpu nfiq
connect-pin tcl nirq! -> cpu nirq

# configure address map
connect-bus bus [0-65535] mem read-write-port
# 4 control bytes at 0x80000000
connect-bus bus [2147483648-2147483651] tcl tcl-bus

# connect other components
connect-bus loader load-accessor-data bus access-port
connect-bus loader load-accessor-insn bus access-port
connect-bus cpu insn-memory bus access-port
connect-bus cpu data-memory bus access-port
connect-bus angel target-memory bus access-port

# tracing
# set these to 1 to get debugging messages
set cpu trace-extract? 0
set cpu trace-result? 0
set cpu debug-exec? 0
set angel verbose? 0

# number of insns/ticks
# Set to some number > 1 to test having a value > 1.
set cpu step-insn-count 4
