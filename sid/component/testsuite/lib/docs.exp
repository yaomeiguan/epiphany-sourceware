# -*- Tcl -*-
# docs.exp
#
# Copyright (C) 1999 Red Hat
#
# Description:
# Procedures for performing an integrity check on a documentation file
# formatted in the documented SID template format. These procs are
# quite simplistic right now, but will grow as we think of better
# ways to test it.
#
# doc_test runs a integrity test on a documentation file.

proc doc_test {subdirectory compname} {
    global docname contents subdir

    set subdir $subdirectory
    regsub -all -- / $compname _ docname

    # Each sub-test, one by one.
    doc_exists
    doc_includes_component $compname
    doc_trailing_whitespace

    if {[info exists contents]} { unset contents }
}


proc doc_load {} {
    global docname contents
    
    if {[info exists contents]} { return 1 }

    if {![catch {set fd [open $docname r]}]} {
	set contents [read $fd]
	close $fd
	return 1
    }
    return 0
}
	

# Test if a doc file exists in the source tree.
# Passes or fails the test.

proc doc_exists {} {
    global srcdir subdir docname

    # search for related file names first
    set parts [split $docname {}]
    for {set i [expr [llength $parts] - 1]} {$i > 0} {set i [expr $i - 1]} {
	set candidate [join [lrange $parts 0 $i] {}]
	set dir [file join [file join $srcdir ".."] $subdir]
	set pattern "[file join $dir $candidate]*.txt"
	set candidates [glob -nocomplain -- $pattern]
	verbose "Candidates: $pattern -> $candidates"
	if {[llength $candidates] == 1} then {
	    pass "Documentation file exists (${docname}.txt)"
	    set docname [lindex $candidates 0]
	    return
	}
    }
    fail "Documentation file ($docname) is missing"
}


# Test if the documentation file includes documentation about COMPONENT.
# Passes or fails the test.

proc doc_includes_component {component} {
    global docname contents

    if {![doc_load]} { return }
    
    if {[regexp "\\* Name\n  .*${component}\.*n" $contents]} {
	pass "Documentation file seems to document $component"
    } else {
	pass "Documentation file does not seem to document $component"
    }
}

# Look for any trailing whitespace on any line.

proc doc_trailing_whitespace {} {
    global docname contents
    
    if {![doc_load]} { return }

    if {[regexp "\[ \\t\]+$" $contents]} {
	fail "Documentation file contains trailing whitespace"
    } else {
	pass "Documentation file contains no trailing whitespace"
    }
}
