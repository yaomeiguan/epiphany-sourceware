# mep testcase for smcpm1 $crn,($rm+),$imm8a8 -*- Asm -*-
# configline(): set cpu cp-option? true
# mach: all

	.include "testutils.inc"
	start
	.global smcpm1
smcpm1:
	# Prime mb1, me1.
	movu $0, 0x3333
	stc $0, $mb1
	movu $0, 0x5555
	stc $0, $me1

	# Load 0x12340802 into $cr1.
	mov $0, 0x1234
	sll $0, 8
	add $0, 8
	sll $0, 8
	add $0, 2
	cmov $cr1, $0

	# Store it.
	mov $0, 0x40
	smcpm1 $cr1, ($0+), 8

	# Ensure $0 has been incremented by 8.
	assert $0, 0x48

	# Load it back.
	mov $0, 0x40
	lmcpm1 $cr2, ($0+), 8

	# Ensure $0 has been incremented by 8.
	assert $0, 0x48
	cmov $1, $cr2

	# Verify.
	mov $7, 0x1234
	sll $7, 8
	add $7, 8
	sll $7, 8
	add $7, 2
	sub $7, $1
	bnez $7, wrong

	# Test restart condition in modulo addressing.
	# (ie. Rm <= MB0, since Rm & mask == ME0).

	mov $7, 0x100
	stc $7, $mb1
	mov $7, 0x200
	stc $7, $me1

	mov $0, 0x200
	smcpm1 $cr1, ($0+), 8

	# Assert $0 is set to $mb1.
	ldc $7, $mb1
	sub $7, $0
	bnez $7, wrong
	
okay:
	pass
wrong:
	fail
