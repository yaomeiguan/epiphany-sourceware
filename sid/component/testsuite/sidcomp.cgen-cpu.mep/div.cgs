# mep testcase for div $rn,$rm -*- Asm -*-
# configline(): set cpu div-option? true
# mach: all

	.include "testutils.inc"
        .macro assert_hilo hi lo
        ldc $8, $hi
        assert $8, \hi
        ldc $8, $lo
        assert $8, \lo
        .endm

	start
	.global div
div:
	# 5 / 1 = 5.
	mov $0, 5
	mov $1, 1
	div $0, $1

	# 1 / 5 = 0.
	mov $0, 1
	mov $1, 5
	div $0, $1

	# 3 / -1 = -3.
	mov $0, 3
	mov $1, -1
	div $0, $1

	# 1 / -3 = 0.
	mov $0, 1
	mov $1, -3
	div $0, $1

	# -3 / -1 = 3.
	mov $0, -3
	mov $1, -1
	div $0, $1

	# 13 / 5 = 2.
	mov $0, 13
	mov $1, 5
	div $0, $1

	# 0 / 8 = 0.
	mov $0, 0
	mov $1, 8
	div $0, $1

	# Special case from Toshiba doco (rev 2.0, p. 70).
	# First, load 0x80000000 into $0.
	mov $0, 1
	sll $0, 31
	# Now load -1 into $1.
	mov $1, -1
	# Now divide.  Expect 0 in HI and 0x80000000 in LO.
	div $0, $1
	ldc $3, $hi
	bnez $3, wrong
	ldc $3, $lo
	mov $4, 1
	sll $4, 31
	sub $4, $3
	bnez $4, wrong

okay:
	pass
wrong:
	fail
