# sid configuration file
# created by Id: configrun-sid.in,v 1.75 2001/07/02 05:50:19 bje Exp 
# run by bje @ scooby.brisbane.redhat.com (Linux) at Thu Jul  5 13:57:38 EST 2001
# args: --cpu mep --no-run --trace-semantics halt.s.x
load libcgencpu.la cgen_component_library
load libconsoles.la console_component_library
load libgdb.la gdb_component_library
load libgloss.la gloss_component_library
load libglue.la glue_component_library
load libinterrupt.la interrupt_component_library
load libloader.la loader_component_library
load libmapper.la mapper_component_library
load libmemory.la mem_component_library
load libsched.la sched_component_library
# first section
new hw-cpu-mep cpu
new hw-mapper-basic mapper
new hw-glue-sequence-8 init-sequence
new hw-glue-sequence-1 hw-reset-net
new hw-glue-sequence-8 deinit-sequence
new hw-glue-sequence-1 yield-net
new sid-sched-host-accurate host-sched
new sid-sched-sim target-sched
# add control bus probe
new hw-glue-probe-bus control-bus-probe
# gloss
new sw-gloss-generic/libgloss gloss
# gloss <-> stdio
new sid-io-stdio stdio
# cpu-loader
new sw-load-elf cpu-loader
# second section
# settings
set cpu step-insn-count 10000
set cpu trace-semantics? 0
set cpu trace-disassemble? 0
set cpu trace-counter? 0
set cpu trace-extract? 0
set host-sched num-clients 10 # large enough?
set target-sched num-clients 10 # large enough?
# pin connections
connect-pin main perform-activity -> host-sched advance
connect-pin main perform-activity -> target-sched advance
connect-pin main starting -> init-sequence input
connect-pin main stopping -> deinit-sequence input
connect-pin init-sequence output-0 -> hw-reset-net input
connect-pin hw-reset-net output-0 -> cpu reset!
connect-pin target-sched 0-event -> cpu step!
connect-pin target-sched 0-control <- cpu step-cycles
connect-pin yield-net output-0 -> cpu yield
connect-pin yield-net output-0 -> host-sched yield
# bus connections
connect-bus cpu insn-memory mapper access-port
connect-bus cpu data-memory mapper access-port
# Connect bus tracer to control-space accessor
connect-bus cpu control-space control-bus-probe upstream
set control-bus-probe trace? 0
# gloss
relate gloss cpu cpu
connect-pin init-sequence output-2 -> gloss reset
connect-pin cpu trap <-> gloss trap
connect-pin cpu trap-code -> gloss trap-code
set gloss verbose? 0
connect-bus gloss target-memory mapper access-port
# interrupt testing
set host-sched 5-regular? 1
set host-sched 5-time 1000 # every second
connect-pin host-sched 5-event -> cpu reset!
# gloss <-> stdio
set host-sched 0-regular? 1
set host-sched 0-time 150 # apprx. human perception limit
connect-pin host-sched 0-event -> stdio poll
connect-pin gloss debug-tx -> stdio stdout
connect-pin gloss debug-rx <- stdio stdin
# gloss w/o gdb
connect-pin gloss process-signal -> main stop!
connect-pin gloss process-signal -> yield-net input
set cpu engine-type pbb
# cpu-loader
set cpu-loader file "@-testprog-@"
set cpu-loader verbose? 0
connect-bus cpu-loader load-accessor-data mapper access-port # don't trace loading
connect-bus cpu-loader load-accessor-insn mapper access-port # don't trace loading
connect-pin init-sequence output-1 -> cpu-loader load!
connect-pin cpu-loader start-pc-set -> cpu start-pc-set!
connect-pin cpu-loader endian-set -> cpu endian-set!
connect-pin cpu-loader error -> main stop!
# memory region 1 (0x00000000,0x00200000)
new hw-memory-ram/rom-basic mem1
set mem1 size 2097152
connect-bus mapper mem1:[0,2097151] mem1 read-write-port
