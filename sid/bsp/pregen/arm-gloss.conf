# sid configuration file
# created by Id: configrun-sid.in,v 1.15 2001/06/23 11:18:01 fche Exp 
# run by jjohnstn @ touchme.toronto.redhat.com (Linux) at Wed Jul 18 16:51:55 EDT 2001
# args: --cpu=arm --no-run --gdb=5000 -EL
set main persistent? true
load libaudio.la audio_component_library
load libcgencpu.la cgen_component_library
load libconsoles.la console_component_library
load libgdb.la gdb_component_library
load libgloss.la gloss_component_library
load libglue.la glue_component_library
load libhd44780u.la hd44780u_component_library
load libide.la ide_component_library
load libinterrupt.la interrupt_component_library
load libloader.la loader_component_library
load libmapper.la mapper_component_library
load libmemory.la mem_component_library
load libmmu.la mmu_component_library
load libparport.la parport_component_library
load libprof.la prof_component_library
load librtc.la rtc_component_library
load libsched.la sched_component_library
load libtimers.la timer_component_library
load libuart.la uart_component_library
# first section
new hw-cpu-arm7t cpu
new hw-mapper-basic mapper
new hw-glue-sequence-8 init-sequence
new hw-glue-sequence-1 hw-reset-net
new hw-glue-sequence-8 deinit-sequence
new hw-glue-sequence-1 yield-net
new sid-sched-host-accurate host-sched
new sid-sched-sim target-sched
# gloss
new sw-gloss-arm/angel gloss
# gdb
new sw-debug-gdb gdb
new sid-io-socket-server gdb-socket
# second section
# settings
set cpu step-insn-count 10000
set cpu trace-result? 0
set cpu trace-extract? 0
set cpu enable-warnings? 0
set host-sched num-clients 10 # large enough?
set target-sched num-clients 10 # large enough?
# pin connections
connect-pin main perform-activity -> host-sched advance
connect-pin main perform-activity -> target-sched advance
connect-pin main starting -> init-sequence input
connect-pin main stopping -> deinit-sequence input
connect-pin init-sequence output-0 -> hw-reset-net input
connect-pin hw-reset-net output-0 -> cpu reset!
connect-pin target-sched 0-event -> cpu step!
connect-pin target-sched 0-control <- cpu step-cycles
connect-pin yield-net output-0 -> cpu yield
connect-pin yield-net output-0 -> host-sched yield
# bus connections
connect-bus cpu insn-memory mapper access-port
connect-bus cpu data-memory mapper access-port
# gloss
relate gloss cpu cpu
connect-pin init-sequence output-2 -> gloss reset
connect-pin cpu trap <-> gloss trap
connect-pin cpu trap-code -> gloss trap-code
set gloss verbose? 0
connect-bus gloss target-memory mapper access-port
set cpu engine-type pbb
# gdb
relate gdb cpu cpu
relate gdb target-schedulers target-sched
relate gdb host-schedulers host-sched
connect-pin gdb process-signal -> main stop!
connect-pin init-sequence output-3 -> gdb init
connect-pin deinit-sequence output-5 -> gdb deinit
connect-pin gdb yield -> yield-net input
connect-pin gdb flush-icache -> cpu flush-icache
connect-pin gdb restart -> hw-reset-net input
set gdb exit-on-detach? 1
set gdb trace-gdbsid? 0
set gdb trace-gdbserv? 0
# gdb-socket
connect-pin init-sequence output-2 -> gdb-socket init
connect-pin deinit-sequence output-6 -> gdb-socket fini
connect-pin gdb-socket rx -> gdb remote-rx
connect-pin gdb-socket tx <- gdb remote-tx
connect-pin host-sched 6-event -> gdb-socket poll-event
connect-pin host-sched 6-control <- gdb-socket poll-control
set gdb-socket sockaddr-local 0.0.0.0:5000
set gdb-socket verbose? 0
# gdb w/ gloss
connect-pin gloss trap-chain <-> gdb trap
connect-pin gloss trap-code-chain -> gdb trap-code
connect-pin gloss process-signal -> gdb gloss-process-signal
connect-pin gloss debug-tx -> gdb target-tx
relate gdb gloss gloss
set gdb enable-Z-packet? true
set gdb operating-mode? false
set cpu endian little
# memory region 1 (0x00000000,0x00800000)
new hw-memory-ram/rom-basic mem1
set mem1 size 8388608
connect-bus mapper mem1:[0,8388607] mem1 read-write-port
